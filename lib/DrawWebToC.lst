                              1  .module drawwebtoc.pre.s
                              2  .area .text
                              3 
                              4 ;***************************************************************************
                              5 ; DEFINE SECTION
                              6 ;***************************************************************************
                              7 ; load vectrex bios routine definitions
                              8 ; include line ->                     INCLUDE  "VECTREX.I"                  ; vectrex function includes
                              9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             10 ; this file contains includes for vectrex BIOS functions and variables      ;
                             11 ; it was written by Bruce Tomlin, slighte changed by Malban                 ;
                             12 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             13 
                     0001    14 INCLUDE_I = 1
                             15 
                     C800    16 Vec_Snd_Shadow  =     0xC800   ;Shadow of sound chip registers (15 bytes)
                     C80F    17 Vec_Btn_State   =     0xC80F   ;Current state of all joystick buttons
                     C810    18 Vec_Prev_Btns   =     0xC810   ;Previous state of all joystick buttons
                     C811    19 Vec_Buttons     =     0xC811   ;Current toggle state of all buttons
                     C812    20 Vec_Button_1_1  =     0xC812   ;Current toggle state of stick 1 button 1
                     C813    21 Vec_Button_1_2  =     0xC813   ;Current toggle state of stick 1 button 2
                     C814    22 Vec_Button_1_3  =     0xC814   ;Current toggle state of stick 1 button 3
                     C815    23 Vec_Button_1_4  =     0xC815   ;Current toggle state of stick 1 button 4
                     C816    24 Vec_Button_2_1  =     0xC816   ;Current toggle state of stick 2 button 1
                     C817    25 Vec_Button_2_2  =     0xC817   ;Current toggle state of stick 2 button 2
                     C818    26 Vec_Button_2_3  =     0xC818   ;Current toggle state of stick 2 button 3
                     C819    27 Vec_Button_2_4  =     0xC819   ;Current toggle state of stick 2 button 4
                     C81A    28 Vec_Joy_Resltn  =     0xC81A   ;Joystick A/D resolution (0x80=min 0x00=max)
                     C81B    29 Vec_Joy_1_X     =     0xC81B   ;Joystick 1 left/right
                     C81C    30 Vec_Joy_1_Y     =     0xC81C   ;Joystick 1 up/down
                     C81D    31 Vec_Joy_2_X     =     0xC81D   ;Joystick 2 left/right
                     C81E    32 Vec_Joy_2_Y     =     0xC81E   ;Joystick 2 up/down
                     C81F    33 Vec_Joy_Mux     =     0xC81F   ;Joystick enable/mux flags (4 bytes)
                     C81F    34 Vec_Joy_Mux_1_X =     0xC81F   ;Joystick 1 X enable/mux flag (=1)
                     C820    35 Vec_Joy_Mux_1_Y =     0xC820   ;Joystick 1 Y enable/mux flag (=3)
                     C821    36 Vec_Joy_Mux_2_X =     0xC821   ;Joystick 2 X enable/mux flag (=5)
                     C822    37 Vec_Joy_Mux_2_Y =     0xC822   ;Joystick 2 Y enable/mux flag (=7)
                     C823    38 Vec_Misc_Count  =     0xC823   ;Misc counter/flag byte, zero when not in use
                     C824    39 Vec_0Ref_Enable =     0xC824   ;Check0Ref enable flag
                     C825    40 Vec_Loop_Count  =     0xC825   ;Loop counter word (incremented in Wait_Recal)
                     C827    41 Vec_Brightness  =     0xC827   ;Default brightness
                     C828    42 Vec_Dot_Dwell   =     0xC828   ;Dot dwell time?
                     C829    43 Vec_Pattern     =     0xC829   ;Dot pattern (bits)
                     C82A    44 Vec_Text_HW     =     0xC82A   ;Default text height and width
                     C82A    45 Vec_Text_Height =     0xC82A   ;Default text height
                     C82B    46 Vec_Text_Width  =     0xC82B   ;Default text width
                     C82C    47 Vec_Str_Ptr     =     0xC82C   ;Temporary string pointer for Print_Str
                     C82E    48 Vec_Counters    =     0xC82E   ;Six bytes of counters
                     C82E    49 Vec_Counter_1   =     0xC82E   ;First  counter byte
                     C82F    50 Vec_Counter_2   =     0xC82F   ;Second counter byte
                     C830    51 Vec_Counter_3   =     0xC830   ;Third  counter byte
                     C831    52 Vec_Counter_4   =     0xC831   ;Fourth counter byte
                     C832    53 Vec_Counter_5   =     0xC832   ;Fifth  counter byte
                     C833    54 Vec_Counter_6   =     0xC833   ;Sixth  counter byte
                     C834    55 Vec_RiseRun_Tmp =     0xC834   ;Temp storage word for rise/run
                     C836    56 Vec_Angle       =     0xC836   ;Angle for rise/run and rotation calculations
                     C837    57 Vec_Run_Index   =     0xC837   ;Index pair for run
                             58 ;                       0xC839   ;Pointer to copyright string during startup
                     C839    59 Vec_Rise_Index  =     0xC839   ;Index pair for rise
                             60 ;                       0xC83B   ;High score cold-start flag (=0 if valid)
                     C83B    61 Vec_RiseRun_Len =     0xC83B   ;length for rise/run
                             62 ;                       0xC83C   ;temp byte
                     C83D    63 Vec_Rfrsh       =     0xC83D   ;Refresh time (divided by 1.5MHz)
                     C83D    64 Vec_Rfrsh_lo    =     0xC83D   ;Refresh time low byte
                     C83E    65 Vec_Rfrsh_hi    =     0xC83E   ;Refresh time high byte
                     C83F    66 Vec_Music_Work  =     0xC83F   ;Music work buffer (14 bytes, backwards?)
                     C842    67 Vec_Music_Wk_A  =     0xC842   ;        register 10
                             68 ;                       0xC843   ;        register 9
                             69 ;                       0xC844   ;        register 8
                     C845    70 Vec_Music_Wk_7  =     0xC845   ;        register 7
                     C846    71 Vec_Music_Wk_6  =     0xC846   ;        register 6
                     C847    72 Vec_Music_Wk_5  =     0xC847   ;        register 5
                             73 ;                       0xC848   ;        register 4
                             74 ;                       0xC849   ;        register 3
                             75 ;                       0xC84A   ;        register 2
                     C84B    76 Vec_Music_Wk_1  =     0xC84B   ;        register 1
                             77 ;                       0xC84C   ;        register 0
                     C84D    78 Vec_Freq_Table  =     0xC84D   ;Pointer to note-to-frequency table (normally 0xFC8D)
                     C84F    79 Vec_Max_Players =     0xC84F   ;Maximum number of players for Select_Game
                     C850    80 Vec_Max_Games   =     0xC850   ;Maximum number of games for Select_Game
                     C84F    81 Vec_ADSR_Table  =     0xC84F   ;Storage for first music header word (ADSR table)
                     C851    82 Vec_Twang_Table =     0xC851   ;Storage for second music header word ('twang' table)
                     C853    83 Vec_Music_Ptr   =     0xC853   ;Music data pointer
                     C853    84 Vec_Expl_ChanA  =     0xC853   ;Used by Explosion_Snd - bit for first channel used?
                     C854    85 Vec_Expl_Chans  =     0xC854   ;Used by Explosion_Snd - bits for all channels used?
                     C855    86 Vec_Music_Chan  =     0xC855   ;Current sound channel number for Init_Music
                     C856    87 Vec_Music_Flag  =     0xC856   ;Music active flag (0x00=off 0x01=start 0x80=on)
                     C857    88 Vec_Duration    =     0xC857   ;Duration counter for Init_Music
                     C858    89 Vec_Music_Twang =     0xC858   ;3 word 'twang' table used by Init_Music
                     C858    90 Vec_Expl_1      =     0xC858   ;Four bytes copied from Explosion_Snd's U-reg parameters
                     C859    91 Vec_Expl_2      =     0xC859   ;
                     C85A    92 Vec_Expl_3      =     0xC85A   ;
                     C85B    93 Vec_Expl_4      =     0xC85B   ;
                     C85C    94 Vec_Expl_Chan   =     0xC85C   ;Used by Explosion_Snd - channel number in use?
                     C85D    95 Vec_Expl_ChanB  =     0xC85D   ;Used by Explosion_Snd - bit for second channel used?
                     C85E    96 Vec_ADSR_Timers =     0xC85E   ;ADSR timers for each sound channel (3 bytes)
                     C861    97 Vec_Music_Freq  =     0xC861   ;Storage for base frequency of each channel (3 words)
                             98 ;                       0xC85E   ;Scratch 'score' storage for Display_Option (7 bytes)
                     C867    99 Vec_Expl_Flag   =     0xC867   ;Explosion_Snd initialization flag?
                            100 ;               0xC868...0xC876   ;Unused?
                     C877   101 Vec_Expl_Timer  =     0xC877   ;Used by Explosion_Snd
                            102 ;                       0xC878   ;Unused?
                     C879   103 Vec_Num_Players =     0xC879   ;Number of players selected in Select_Game
                     C87A   104 Vec_Num_Game    =     0xC87A   ;Game number selected in Select_Game
                     C87B   105 Vec_Seed_Ptr    =     0xC87B   ;Pointer to 3-byte random number seed (=0xC87D)
                     C87D   106 Vec_Random_Seed =     0xC87D   ;Default 3-byte random number seed
                            107                                 ;
                            108 ;    0xC880 - 0xCBEA is user RAM  ;
                            109                                 ;
                     CBEA   110 Vec_Default_Stk =     0xCBEA   ;Default top-of-stack
                     CBEB   111 Vec_High_Score  =     0xCBEB   ;High score storage (7 bytes)
                     CBF2   112 Vec_SWI3_Vector =     0xCBF2   ;SWI2/SWI3 interrupt vector (3 bytes)
                     CBF2   113 Vec_SWI2_Vector =     0xCBF2   ;SWI2/SWI3 interrupt vector (3 bytes)
                     CBF5   114 Vec_FIRQ_Vector =     0xCBF5   ;FIRQ interrupt vector (3 bytes)
                     CBF8   115 Vec_IRQ_Vector  =     0xCBF8   ;IRQ interrupt vector (3 bytes)
                     CBFB   116 Vec_SWI_Vector  =     0xCBFB   ;SWI/NMI interrupt vector (3 bytes)
                     CBFB   117 Vec_NMI_Vector  =     0xCBFB   ;SWI/NMI interrupt vector (3 bytes)
                     CBFE   118 Vec_Cold_Flag   =     0xCBFE   ;Cold start flag (warm start if = 0x7321)
                            119                                 ;
                     D000   120 VIA_port_b      =     0xD000   ;VIA port B data I/O register
                            121 ;       0 sample/hold (0=enable  mux 1=disable mux)
                            122 ;       1 mux sel 0
                            123 ;       2 mux sel 1
                            124 ;       3 sound BC1
                            125 ;       4 sound BDIR
                            126 ;       5 comparator input
                            127 ;       6 external device (slot pin 35) initialized to input
                            128 ;       7 /RAMP
                     D001   129 VIA_port_a      =     0xD001   ;VIA port A data I/O register (handshaking)
                     D002   130 VIA_DDR_b       =     0xD002   ;VIA port B data direction register (0=input 1=output)
                     D003   131 VIA_DDR_a       =     0xD003   ;VIA port A data direction register (0=input 1=output)
                     D004   132 VIA_t1_cnt_lo   =     0xD004   ;VIA timer 1 count register lo (scale factor)
                     D005   133 VIA_t1_cnt_hi   =     0xD005   ;VIA timer 1 count register hi
                     D006   134 VIA_t1_lch_lo   =     0xD006   ;VIA timer 1 latch register lo
                     D007   135 VIA_t1_lch_hi   =     0xD007   ;VIA timer 1 latch register hi
                     D008   136 VIA_t2_lo       =     0xD008   ;VIA timer 2 count/latch register lo (refresh)
                     D009   137 VIA_t2_hi       =     0xD009   ;VIA timer 2 count/latch register hi
                     D00A   138 VIA_shift_reg   =     0xD00A   ;VIA shift register
                     D00B   139 VIA_aux_cntl    =     0xD00B   ;VIA auxiliary control register
                            140 ;       0 PA latch enable
                            141 ;       1 PB latch enable
                            142 ;       2 \                     110=output to CB2 under control of phase 2 clock
                            143 ;       3  > shift register control     (110 is the only mode used by the Vectrex ROM)
                            144 ;       4 /
                            145 ;       5 0=t2 one shot                 1=t2 free running
                            146 ;       6 0=t1 one shot                 1=t1 free running
                            147 ;       7 0=t1 disable PB7 output       1=t1 enable PB7 output
                     D00C   148 VIA_cntl        =     0xD00C   ;VIA control register
                            149 ;       0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
                            150 ;       1 \
                            151 ;       2  > CA2 control  CA2 -> /ZERO  110=low 111=high
                            152 ;       3 /
                            153 ;       4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
                            154 ;       5 \
                            155 ;       6  > CB2 control  CB2 -> /BLANK 110=low 111=high
                            156 ;       7 /
                     D00D   157 VIA_int_flags   =     0xD00D   ;VIA interrupt flags register
                            158 ;               bit                             cleared by
                            159 ;       0 CA2 interrupt flag            reading or writing port A I/O
                            160 ;       1 CA1 interrupt flag            reading or writing port A I/O
                            161 ;       2 shift register interrupt flag reading or writing shift register
                            162 ;       3 CB2 interrupt flag            reading or writing port B I/O
                            163 ;       4 CB1 interrupt flag            reading or writing port A I/O
                            164 ;       5 timer 2 interrupt flag        read t2 low or write t2 high
                            165 ;       6 timer 1 interrupt flag        read t1 count low or write t1 high
                            166 ;       7 IRQ status flag               write logic 0 to IER or IFR bit
                     D00E   167 VIA_int_enable  =     0xD00E   ;VIA interrupt enable register
                            168 ;       0 CA2 interrupt enable
                            169 ;       1 CA1 interrupt enable
                            170 ;       2 shift register interrupt enable
                            171 ;       3 CB2 interrupt enable
                            172 ;       4 CB1 interrupt enable
                            173 ;       5 timer 2 interrupt enable
                            174 ;       6 timer 1 interrupt enable
                            175 ;       7 IER set/clear control
                     D00F   176 VIA_port_a_nohs =     0xD00F   ;VIA port A data I/O register (no handshaking)
                            177 
                     F000   178 Cold_Start      =     0xF000   ;
                     F06C   179 Warm_Start      =     0xF06C   ;
                     F14C   180 Init_VIA        =     0xF14C   ;
                     F164   181 Init_OS_RAM     =     0xF164   ;
                     F18B   182 Init_OS         =     0xF18B   ;
                     F192   183 Wait_Recal      =     0xF192   ;
                     F1A2   184 Set_Refresh     =     0xF1A2   ;
                     F1AA   185 DP_to_D0        =     0xF1AA   ;
                     F1AF   186 DP_to_C8        =     0xF1AF   ;
                     F1B4   187 Read_Btns_Mask  =     0xF1B4   ;
                     F1BA   188 Read_Btns       =     0xF1BA   ;
                     F1F5   189 Joy_Analog      =     0xF1F5   ;
                     F1F8   190 Joy_Digital     =     0xF1F8   ;
                     F256   191 Sound_Byte      =     0xF256   ;
                     F259   192 Sound_Byte_x    =     0xF259   ;
                     F25B   193 Sound_Byte_raw  =     0xF25B   ;
                     F272   194 Clear_Sound     =     0xF272   ;
                     F27D   195 Sound_Bytes     =     0xF27D   ;
                     F284   196 Sound_Bytes_x   =     0xF284   ;
                     F289   197 Do_Sound        =     0xF289   ;
                     F28C   198 Do_Sound_x      =     0xF28C   ;
                     F29D   199 Intensity_1F    =     0xF29D   ;
                     F2A1   200 Intensity_3F    =     0xF2A1   ;
                     F2A5   201 Intensity_5F    =     0xF2A5   ;
                     F2A9   202 Intensity_7F    =     0xF2A9   ;
                     F2AB   203 Intensity_a     =     0xF2AB   ;
                     F2BE   204 Dot_ix_b        =     0xF2BE   ;
                     F2C1   205 Dot_ix          =     0xF2C1   ;
                     F2C3   206 Dot_d           =     0xF2C3   ;
                     F2C5   207 Dot_here        =     0xF2C5   ;
                     F2D5   208 Dot_List        =     0xF2D5   ;
                     F2DE   209 Dot_List_Reset  =     0xF2DE   ;
                     F2E6   210 Recalibrate     =     0xF2E6   ;
                     F2F2   211 Moveto_x_7F     =     0xF2F2   ;
                     F2FC   212 Moveto_d_7F     =     0xF2FC   ;
                     F308   213 Moveto_ix_FF    =     0xF308   ;
                     F30C   214 Moveto_ix_7F    =     0xF30C   ;
                     F30E   215 Moveto_ix_b     =     0xF30E   ;
                     F310   216 Moveto_ix       =     0xF310   ;
                     F312   217 Moveto_d        =     0xF312   ;
                     F34A   218 Reset0Ref_D0    =     0xF34A   ;
                     F34F   219 Check0Ref       =     0xF34F   ;
                     F354   220 Reset0Ref       =     0xF354   ;
                     F35B   221 Reset_Pen       =     0xF35B   ;
                     F36B   222 Reset0Int       =     0xF36B   ;
                     F373   223 Print_Str_hwyx  =     0xF373   ;
                     F378   224 Print_Str_yx    =     0xF378   ;
                     F37A   225 Print_Str_d     =     0xF37A   ;
                     F385   226 Print_List_hw   =     0xF385   ;
                     F38A   227 Print_List      =     0xF38A   ;
                     F38C   228 Print_List_chk  =     0xF38C   ;
                     F391   229 Print_Ships_x   =     0xF391   ;
                     F393   230 Print_Ships     =     0xF393   ;
                     F3AD   231 Mov_Draw_VLc_a  =     0xF3AD   ;count y x y x ...
                     F3B1   232 Mov_Draw_VL_b   =     0xF3B1   ;y x y x ...
                     F3B5   233 Mov_Draw_VLcs   =     0xF3B5   ;count scale y x y x ...
                     F3B7   234 Mov_Draw_VL_ab  =     0xF3B7   ;y x y x ...
                     F3B9   235 Mov_Draw_VL_a   =     0xF3B9   ;y x y x ...
                     F3BC   236 Mov_Draw_VL     =     0xF3BC   ;y x y x ...
                     F3BE   237 Mov_Draw_VL_d   =     0xF3BE   ;y x y x ...
                     F3CE   238 Draw_VLc        =     0xF3CE   ;count y x y x ...
                     F3D2   239 Draw_VL_b       =     0xF3D2   ;y x y x ...
                     F3D6   240 Draw_VLcs       =     0xF3D6   ;count scale y x y x ...
                     F3D8   241 Draw_VL_ab      =     0xF3D8   ;y x y x ...
                     F3DA   242 Draw_VL_a       =     0xF3DA   ;y x y x ...
                     F3DD   243 Draw_VL         =     0xF3DD   ;y x y x ...
                     F3DF   244 Draw_Line_d     =     0xF3DF   ;y x y x ...
                     F404   245 Draw_VLp_FF     =     0xF404   ;pattern y x pattern y x ... 0x01
                     F408   246 Draw_VLp_7F     =     0xF408   ;pattern y x pattern y x ... 0x01
                     F40C   247 Draw_VLp_scale  =     0xF40C   ;scale pattern y x pattern y x ... 0x01
                     F40E   248 Draw_VLp_b      =     0xF40E   ;pattern y x pattern y x ... 0x01
                     F410   249 Draw_VLp        =     0xF410   ;pattern y x pattern y x ... 0x01
                     F434   250 Draw_Pat_VL_a   =     0xF434   ;y x y x ...
                     F437   251 Draw_Pat_VL     =     0xF437   ;y x y x ...
                     F439   252 Draw_Pat_VL_d   =     0xF439   ;y x y x ...
                     F46E   253 Draw_VL_mode    =     0xF46E   ;mode y x mode y x ... 0x01
                     F495   254 Print_Str       =     0xF495   ;
                     F511   255 Random_3        =     0xF511   ;
                     F517   256 Random          =     0xF517   ;
                     F533   257 Init_Music_Buf  =     0xF533   ;
                     F53F   258 Clear_x_b       =     0xF53F   ;
                     F542   259 Clear_C8_RAM    =     0xF542   ;never used by GCE carts?
                     F545   260 Clear_x_256     =     0xF545   ;
                     F548   261 Clear_x_d       =     0xF548   ;
                     F550   262 Clear_x_b_80    =     0xF550   ;
                     F552   263 Clear_x_b_a     =     0xF552   ;
                     F55A   264 Dec_3_Counters  =     0xF55A   ;
                     F55E   265 Dec_6_Counters  =     0xF55E   ;
                     F563   266 Dec_Counters    =     0xF563   ;
                     F56D   267 Delay_3         =     0xF56D   ;30 cycles
                     F571   268 Delay_2         =     0xF571   ;25 cycles
                     F575   269 Delay_1         =     0xF575   ;20 cycles
                     F579   270 Delay_0         =     0xF579   ;12 cycles
                     F57A   271 Delay_b         =     0xF57A   ;5*B + 10 cycles
                     F57D   272 Delay_RTS       =     0xF57D   ;5 cycles
                     F57E   273 Bitmask_a       =     0xF57E   ;
                     F584   274 Abs_a_b         =     0xF584   ;
                     F58B   275 Abs_b           =     0xF58B   ;
                     F593   276 Rise_Run_Angle  =     0xF593   ;
                     F5D9   277 Get_Rise_Idx    =     0xF5D9   ;
                     F5DB   278 Get_Run_Idx     =     0xF5DB   ;
                     F5EF   279 Get_Rise_Run    =     0xF5EF   ;
                     F5FF   280 Rise_Run_X      =     0xF5FF   ;
                     F601   281 Rise_Run_Y      =     0xF601   ;
                     F603   282 Rise_Run_Len    =     0xF603   ;
                            283 
                     F610   284 Rot_VL_ab       =     0xF610   ;
                     F616   285 Rot_VL          =     0xF616   ;
                     F61F   286 Rot_VL_Mode   =     0xF61F   ;
                     F62B   287 Rot_VL_M_dft     =     0xF62B   ;
                            288 ;Rot_VL_dft      EQU     0xF637   ;
                            289 
                            290 
                            291 ;Rot_VL_ab       EQU     0xF610   ;
                            292 ;Rot_VL          EQU     0xF616   ;
                            293 ;Rot_VL_Mode_a   EQU     0xF61F   ;
                            294 ;Rot_VL_Mode     EQU     0xF62B   ;
                            295 ;Rot_VL_dft      EQU     0xF637   ;
                            296 
                     F65B   297 Xform_Run_a     =     0xF65B   ;
                     F65D   298 Xform_Run       =     0xF65D   ;
                     F661   299 Xform_Rise_a    =     0xF661   ;
                     F663   300 Xform_Rise      =     0xF663   ;
                     F67F   301 Move_Mem_a_1    =     0xF67F   ;
                     F683   302 Move_Mem_a      =     0xF683   ;
                     F687   303 Init_Music_chk  =     0xF687   ;
                     F68D   304 Init_Music      =     0xF68D   ;
                     F692   305 Init_Music_x    =     0xF692   ;
                     F7A9   306 Select_Game     =     0xF7A9   ;
                     F84F   307 Clear_Score     =     0xF84F   ;
                     F85E   308 Add_Score_a     =     0xF85E   ;
                     F87C   309 Add_Score_d     =     0xF87C   ;
                     F8B7   310 Strip_Zeros     =     0xF8B7   ;
                     F8C7   311 Compare_Score   =     0xF8C7   ;
                     F8D8   312 New_High_Score  =     0xF8D8   ;
                     F8E5   313 Obj_Will_Hit_u  =     0xF8E5   ;
                     F8F3   314 Obj_Will_Hit    =     0xF8F3   ;
                     F8FF   315 Obj_Hit         =     0xF8FF   ;
                     F92E   316 Explosion_Snd   =     0xF92E   ;
                     FF9F   317 Draw_Grid_VL    =     0xFF9F   ;
                            318                                 ;
                     FD0D   319 music1  = 0xFD0D               ;
                     FD1D   320 music2  = 0xFD1D               ;
                     FD81   321 music3  = 0xFD81               ;
                     FDD3   322 music4  = 0xFDD3               ;
                     FE38   323 music5  = 0xFE38               ;
                     FE76   324 music6  = 0xFE76               ;
                     FEC6   325 music7  = 0xFEC6               ;
                     FEF8   326 music8  = 0xFEF8               ;
                     FF26   327 music9  = 0xFF26               ;
                     FF44   328 musica  = 0xFF44               ;
                     FF62   329 musicb  = 0xFF62               ;
                     FF7A   330 musicc  = 0xFF7A               ;
                     FF8F   331 musicd  = 0xFF8F               ;
                     F9F4   332 Char_Table = 0xF9F4
                     FBD4   333 Char_Table_End = 0xFBD4
                            334 
                            335 
                            336                     .area .text     
                            337 
                            338 ; here the cartridge program starts off
                     00E0   339 SHIFT_1             =        0b11100000 
                     00FE   340 SHIFT_2             =        0b11111110 
                            341 ; cmpx #4
                            342 ; pshs d,y,x,pc,u,cc;16
                            343 ; puls d,y,x,pc,u,cc; 16
                            344 ; pshs y,x,pc,u,cc;14
                            345 ; puls y,x,pc,u,cc; 14
                            346 ; pshs a,x,pc,u,cc;13
                            347 ; puls a,x,pc,u,cc;13
                            348 
                            349 ; pshs x,pc,u,cc;12
                            350 ; puls x,pc,u,cc;12
                            351 ; pshs pc,u,cc;10
                            352 ; puls pc,u,cc;10
                            353 ; pshs u,cc;8
                            354 ; puls u,cc;8
                            355 ; pshs u;7
                            356 ; puls u;7
                            357 
                            358 ; pshs cc;6
                            359 ; puls cc;6
                            360 ; tfr a,a; 6
                            361 ; brn 0; 3
                            362 ; NOP ; 2
                            363 
                            364 
                            365 ; Warning - direct line found!
                            366 ; direct 0xd0
                            367  .globl drawWebAsm
   0000                     368 drawWebAsm:
                            369 
                            370 ; macro call ->  _ZERO_VECTOR_BEAM  
   0000 C6 CC         [ 2]  371                     LDB      #0xCC                         ; 2 
   0002 D7 0C         [ 4]  372                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                            373 ; macro call ->  WAIT12
   0004 1F 88         [ 6]  374 	tfr a,a; wait 12 cycles
   0006 1F 88         [ 6]  375      tfr a,a
                            376 
   0008 86 CE         [ 2]  377                     LDA      #0xCE                         ;Blank low, zero high? 
   000A 97 0C         [ 4]  378                     STA      *VIA_cntl                    ; 
                            379 ; first WEB
   000C 86 10         [ 2]  380                     LDA      #16                          ;(0x7f/8) ; scalefactor 
   000E 97 04         [ 4]  381                     STA      *VIA_t1_cnt_lo 
                            382 ; macro call ->                     MOVE_TO_OPEN  -26, 105                ; possibly a bit less 127/11 is 15,875 
                            383 ; assuming SHIFT is zeri
   0010 CC 00 E6      [ 3]  384                     LDD      #0+((-26)&0xff)                  ;3 A = 0; B = Y 
   0013 D7 01         [ 4]  385                     STb      *VIA_port_a                  ; 6 
   0015 97 00         [ 4]  386                     STa      *VIA_port_b                  ; 6 
   0017 C6 69         [ 2]  387                     LDB      #105 
   0019 0C 00         [ 6]  388                     INC      *VIA_port_b                  ;Disable mux 
   001B D7 01         [ 4]  389                     STB      *VIA_port_a                  ;Send X to A/D 
   001D 97 05         [ 4]  390                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
   001F 86 09         [ 2]  391                     LDA      #9                           ;(0x7f/11) ; 2 scalefactor 
   0021 97 04         [ 4]  392                     STA      *VIA_t1_cnt_lo               ; 4 
                            393 ; macro call ->                     CLOSE    
   0023 86 40         [ 2]  394                     LDA      #0x40                         ; 
                            395  .globl LF33D4
   0025 95 0D         [ 4]  396 LF33D4:              BITA     *VIA_int_flags               ; 
   0027 27 FC         [ 3]  397                     BEQ      LF33D4                        ; 
                            398 ; macro call ->                     DRAW_TO_OPEN  -70, -127               ; 127 == 11,6= 70 
   0029 CC 00 BA      [ 3]  399                     LDD      #0+((-70)&0xff)                  ;3 A = 0; B = Y 
   002C D7 01         [ 4]  400                     STb      *VIA_port_a                  ; 6 
   002E 97 00         [ 4]  401                     STa      *VIA_port_b                  ; 6 
   0030 C6 81         [ 2]  402                     LDB      #-127 
   0032 0C 00         [ 6]  403                     INC      *VIA_port_b                  ;Disable mux 
   0034 D7 01         [ 4]  404                     STB      *VIA_port_a                  ;Send X to A/D 
   0036 C6 3F         [ 2]  405                     LDB      #0b00111111 
   0038 D7 0A         [ 4]  406                     STB      *VIA_shift_reg 
   003A 97 05         [ 4]  407                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            408 ; macro call ->                     CLOSE_SHORT  
   003C C6 FE         [ 2]  409                     ldb      #SHIFT_2 
                            410  .globl LF33D6
   003E                     411 LF33D6: 
   003E 96 04         [ 4]  412                     LDA      *VIA_t1_cnt_lo 
   0040 81 0A         [ 2]  413                     cmpa     #10 
   0042 22 FA         [ 3]  414                     bhi      LF33D6 
   0044 D7 0A         [ 4]  415                     stb      *VIA_shift_reg 
                            416 ; macro call ->                     DRAW_TO_OPEN  0*11, -85 
   0046 CC 00 00      [ 3]  417                     LDD      #0+((0*11)&0xff)                  ;3 A = 0; B = Y 
   0049 D7 01         [ 4]  418                     STb      *VIA_port_a                  ; 6 
   004B 97 00         [ 4]  419                     STa      *VIA_port_b                  ; 6 
   004D C6 AB         [ 2]  420                     LDB      #-85 
   004F 0C 00         [ 6]  421                     INC      *VIA_port_b                  ;Disable mux 
   0051 D7 01         [ 4]  422                     STB      *VIA_port_a                  ;Send X to A/D 
   0053 C6 3F         [ 2]  423                     LDB      #0b00111111 
   0055 D7 0A         [ 4]  424                     STB      *VIA_shift_reg 
   0057 97 05         [ 4]  425                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            426 ; macro call ->                     CLOSE_SHORT  
   0059 C6 FE         [ 2]  427                     ldb      #SHIFT_2 
                            428  .globl LF33D8
   005B                     429 LF33D8: 
   005B 96 04         [ 4]  430                     LDA      *VIA_t1_cnt_lo 
   005D 81 0A         [ 2]  431                     cmpa     #10 
   005F 22 FA         [ 3]  432                     bhi      LF33D8 
   0061 D7 0A         [ 4]  433                     stb      *VIA_shift_reg 
                            434 ; macro call ->                     DRAW_TO_OPEN  70, -127 
   0063 CC 00 46      [ 3]  435                     LDD      #0+((70)&0xff)                  ;3 A = 0; B = Y 
   0066 D7 01         [ 4]  436                     STb      *VIA_port_a                  ; 6 
   0068 97 00         [ 4]  437                     STa      *VIA_port_b                  ; 6 
   006A C6 81         [ 2]  438                     LDB      #-127 
   006C 0C 00         [ 6]  439                     INC      *VIA_port_b                  ;Disable mux 
   006E D7 01         [ 4]  440                     STB      *VIA_port_a                  ;Send X to A/D 
   0070 C6 3F         [ 2]  441                     LDB      #0b00111111 
   0072 D7 0A         [ 4]  442                     STB      *VIA_shift_reg 
   0074 97 05         [ 4]  443                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            444 ; macro call ->                     CLOSE_SHORT  
   0076 C6 FE         [ 2]  445                     ldb      #SHIFT_2 
                            446  .globl LF33D10
   0078                     447 LF33D10: 
   0078 96 04         [ 4]  448                     LDA      *VIA_t1_cnt_lo 
   007A 81 0A         [ 2]  449                     cmpa     #10 
   007C 22 FA         [ 3]  450                     bhi      LF33D10 
   007E D7 0A         [ 4]  451                     stb      *VIA_shift_reg 
                            452 ; macro call ->                     DRAW_TO_OPEN_X0  85 
   0080 CC 00 55      [ 3]  453                     LDD      #0+((85)&0xff)                  ;3 A = 0; B = Y 
   0083 D7 01         [ 4]  454                     STb      *VIA_port_a                  ; 6 
   0085 97 00         [ 4]  455                     STa      *VIA_port_b                  ; 6 
   0087 C6 3F         [ 2]  456                     LDB      #0b00111111 
   0089 0C 00         [ 6]  457                     INC      *VIA_port_b                  ;Disable mux 
   008B 97 01         [ 4]  458                     STa      *VIA_port_a                  ;Send X to A/D 
   008D D7 0A         [ 4]  459                     STB      *VIA_shift_reg 
   008F 97 05         [ 4]  460                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            461 ; macro call ->                     CLOSE_SHORT  
   0091 C6 FE         [ 2]  462                     ldb      #SHIFT_2 
                            463  .globl LF33D12
   0093                     464 LF33D12: 
   0093 96 04         [ 4]  465                     LDA      *VIA_t1_cnt_lo 
   0095 81 0A         [ 2]  466                     cmpa     #10 
   0097 22 FA         [ 3]  467                     bhi      LF33D12 
   0099 D7 0A         [ 4]  468                     stb      *VIA_shift_reg 
                            469 ; macro call ->                     DRAW_TO_OPEN  70, 127 
   009B CC 00 46      [ 3]  470                     LDD      #0+((70)&0xff)                  ;3 A = 0; B = Y 
   009E D7 01         [ 4]  471                     STb      *VIA_port_a                  ; 6 
   00A0 97 00         [ 4]  472                     STa      *VIA_port_b                  ; 6 
   00A2 C6 7F         [ 2]  473                     LDB      #127 
   00A4 0C 00         [ 6]  474                     INC      *VIA_port_b                  ;Disable mux 
   00A6 D7 01         [ 4]  475                     STB      *VIA_port_a                  ;Send X to A/D 
   00A8 C6 3F         [ 2]  476                     LDB      #0b00111111 
   00AA D7 0A         [ 4]  477                     STB      *VIA_shift_reg 
   00AC 97 05         [ 4]  478                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            479 ; macro call ->                     CLOSE_SHORT  
   00AE C6 FE         [ 2]  480                     ldb      #SHIFT_2 
                            481  .globl LF33D14
   00B0                     482 LF33D14: 
   00B0 96 04         [ 4]  483                     LDA      *VIA_t1_cnt_lo 
   00B2 81 0A         [ 2]  484                     cmpa     #10 
   00B4 22 FA         [ 3]  485                     bhi      LF33D14 
   00B6 D7 0A         [ 4]  486                     stb      *VIA_shift_reg 
                            487 ; macro call ->                     DRAW_TO_OPEN  0*11, 85 
   00B8 CC 00 00      [ 3]  488                     LDD      #0+((0*11)&0xff)                  ;3 A = 0; B = Y 
   00BB D7 01         [ 4]  489                     STb      *VIA_port_a                  ; 6 
   00BD 97 00         [ 4]  490                     STa      *VIA_port_b                  ; 6 
   00BF C6 55         [ 2]  491                     LDB      #85 
   00C1 0C 00         [ 6]  492                     INC      *VIA_port_b                  ;Disable mux 
   00C3 D7 01         [ 4]  493                     STB      *VIA_port_a                  ;Send X to A/D 
   00C5 C6 3F         [ 2]  494                     LDB      #0b00111111 
   00C7 D7 0A         [ 4]  495                     STB      *VIA_shift_reg 
   00C9 97 05         [ 4]  496                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            497 ; macro call ->                     CLOSE_SHORT  
   00CB C6 FE         [ 2]  498                     ldb      #SHIFT_2 
                            499  .globl LF33D16
   00CD                     500 LF33D16: 
   00CD 96 04         [ 4]  501                     LDA      *VIA_t1_cnt_lo 
   00CF 81 0A         [ 2]  502                     cmpa     #10 
   00D1 22 FA         [ 3]  503                     bhi      LF33D16 
   00D3 D7 0A         [ 4]  504                     stb      *VIA_shift_reg 
                            505 ; macro call ->                     DRAW_TO_OPEN  -70, 127 
   00D5 CC 00 BA      [ 3]  506                     LDD      #0+((-70)&0xff)                  ;3 A = 0; B = Y 
   00D8 D7 01         [ 4]  507                     STb      *VIA_port_a                  ; 6 
   00DA 97 00         [ 4]  508                     STa      *VIA_port_b                  ; 6 
   00DC C6 7F         [ 2]  509                     LDB      #127 
   00DE 0C 00         [ 6]  510                     INC      *VIA_port_b                  ;Disable mux 
   00E0 D7 01         [ 4]  511                     STB      *VIA_port_a                  ;Send X to A/D 
   00E2 C6 3F         [ 2]  512                     LDB      #0b00111111 
   00E4 D7 0A         [ 4]  513                     STB      *VIA_shift_reg 
   00E6 97 05         [ 4]  514                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            515 ; macro call ->                     CLOSE_SHORT  
   00E8 C6 FE         [ 2]  516                     ldb      #SHIFT_2 
                            517  .globl LF33D18
   00EA                     518 LF33D18: 
   00EA 96 04         [ 4]  519                     LDA      *VIA_t1_cnt_lo 
   00EC 81 0A         [ 2]  520                     cmpa     #10 
   00EE 22 FA         [ 3]  521                     bhi      LF33D18 
   00F0 D7 0A         [ 4]  522                     stb      *VIA_shift_reg 
                            523 ; macro call ->                     DRAW_TO_OPEN_X0  -85 
   00F2 CC 00 AB      [ 3]  524                     LDD      #0+((-85)&0xff)                  ;3 A = 0; B = Y 
   00F5 D7 01         [ 4]  525                     STb      *VIA_port_a                  ; 6 
   00F7 97 00         [ 4]  526                     STa      *VIA_port_b                  ; 6 
   00F9 C6 3F         [ 2]  527                     LDB      #0b00111111 
   00FB 0C 00         [ 6]  528                     INC      *VIA_port_b                  ;Disable mux 
   00FD 97 01         [ 4]  529                     STa      *VIA_port_a                  ;Send X to A/D 
   00FF D7 0A         [ 4]  530                     STB      *VIA_shift_reg 
   0101 97 05         [ 4]  531                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            532 ; macro call ->                     CLOSE_SHORT  
   0103 C6 FE         [ 2]  533                     ldb      #SHIFT_2 
                            534  .globl LF33D20
   0105                     535 LF33D20: 
   0105 96 04         [ 4]  536                     LDA      *VIA_t1_cnt_lo 
   0107 81 0A         [ 2]  537                     cmpa     #10 
   0109 22 FA         [ 3]  538                     bhi      LF33D20 
   010B D7 0A         [ 4]  539                     stb      *VIA_shift_reg 
                            540 ; macro call ->  WAIT6
   010D 1F 88         [ 6]  541 	tfr a,a; wait 6 cycles
                            542 ; macro call ->                     _ZERO_VECTOR_BEAM  
   010F C6 CC         [ 2]  543                     LDB      #0xCC                         ; 2 
   0111 D7 0C         [ 4]  544                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                            545 ; macro call ->  WAIT8
   0113 1F 88         [ 6]  546 	tfr a,a; wait 8 cycles
   0115 12            [ 2]  547  nop 
                            548 ; second web
   0116 86 CE         [ 2]  549                     LDA      #0xCE                         ;Blank low, zero high? 
   0118 97 0C         [ 4]  550                     STA      *VIA_cntl                    ; 
   011A 86 23         [ 2]  551                     LDA      #35 -0                       ;(0x7f/8) ; scalefactor 
   011C 97 04         [ 4]  552                     STA      *VIA_t1_cnt_lo 
                            553 ; macro call ->                     MOVE_TO_OPEN  127, 70-2               ; possibly a bit less 127/11 is 15,875 
                            554 ; assuming SHIFT is zeri
   011E CC 00 7F      [ 3]  555                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   0121 D7 01         [ 4]  556                     STb      *VIA_port_a                  ; 6 
   0123 97 00         [ 4]  557                     STa      *VIA_port_b                  ; 6 
   0125 C6 44         [ 2]  558                     LDB      #70-2 
   0127 0C 00         [ 6]  559                     INC      *VIA_port_b                  ;Disable mux 
   0129 D7 01         [ 4]  560                     STB      *VIA_port_a                  ;Send X to A/D 
   012B 97 05         [ 4]  561                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
   012D 86 27         [ 2]  562                     LDA      #39                          ;(0x7f/11) ; 2 scalefactor 
   012F 97 04         [ 4]  563                     STA      *VIA_t1_cnt_lo               ; 4 
                            564 ; macro call ->                     CLOSE    
   0131 86 40         [ 2]  565                     LDA      #0x40                         ; 
                            566  .globl LF33D25
   0133 95 0D         [ 4]  567 LF33D25:              BITA     *VIA_int_flags               ; 
   0135 27 FC         [ 3]  568                     BEQ      LF33D25                        ; 
                     00E0   569 SHIFT_1             =        0b11100000 
                            570 ; macro call ->                     DRAW_TO_OPEN  0, -127 
   0137 CC 00 00      [ 3]  571                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   013A D7 01         [ 4]  572                     STb      *VIA_port_a                  ; 6 
   013C 97 00         [ 4]  573                     STa      *VIA_port_b                  ; 6 
   013E C6 81         [ 2]  574                     LDB      #-127 
   0140 0C 00         [ 6]  575                     INC      *VIA_port_b                  ;Disable mux 
   0142 D7 01         [ 4]  576                     STB      *VIA_port_a                  ;Send X to A/D 
   0144 C6 3F         [ 2]  577                     LDB      #0b00111111 
   0146 D7 0A         [ 4]  578                     STB      *VIA_shift_reg 
   0148 97 05         [ 4]  579                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            580 ; macro call ->                     CLOSE_SHORT  
   014A C6 FE         [ 2]  581                     ldb      #SHIFT_2 
                            582  .globl LF33D27
   014C                     583 LF33D27: 
   014C 96 04         [ 4]  584                     LDA      *VIA_t1_cnt_lo 
   014E 81 0A         [ 2]  585                     cmpa     #10 
   0150 22 FA         [ 3]  586                     bhi      LF33D27 
   0152 D7 0A         [ 4]  587                     stb      *VIA_shift_reg 
                            588 ; macro call ->                     DRAW_TO_OPEN  -88, -50 
   0154 CC 00 A8      [ 3]  589                     LDD      #0+((-88)&0xff)                  ;3 A = 0; B = Y 
   0157 D7 01         [ 4]  590                     STb      *VIA_port_a                  ; 6 
   0159 97 00         [ 4]  591                     STa      *VIA_port_b                  ; 6 
   015B C6 CE         [ 2]  592                     LDB      #-50 
   015D 0C 00         [ 6]  593                     INC      *VIA_port_b                  ;Disable mux 
   015F D7 01         [ 4]  594                     STB      *VIA_port_a                  ;Send X to A/D 
   0161 C6 3F         [ 2]  595                     LDB      #0b00111111 
   0163 D7 0A         [ 4]  596                     STB      *VIA_shift_reg 
   0165 97 05         [ 4]  597                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            598 ; macro call ->                     CLOSE_SHORT  
   0167 C6 FE         [ 2]  599                     ldb      #SHIFT_2 
                            600  .globl LF33D29
   0169                     601 LF33D29: 
   0169 96 04         [ 4]  602                     LDA      *VIA_t1_cnt_lo 
   016B 81 0A         [ 2]  603                     cmpa     #10 
   016D 22 FA         [ 3]  604                     bhi      LF33D29 
   016F D7 0A         [ 4]  605                     stb      *VIA_shift_reg 
                            606 ; macro call ->                     DRAW_TO_OPEN_X0  -50 
   0171 CC 00 CE      [ 3]  607                     LDD      #0+((-50)&0xff)                  ;3 A = 0; B = Y 
   0174 D7 01         [ 4]  608                     STb      *VIA_port_a                  ; 6 
   0176 97 00         [ 4]  609                     STa      *VIA_port_b                  ; 6 
   0178 C6 3F         [ 2]  610                     LDB      #0b00111111 
   017A 0C 00         [ 6]  611                     INC      *VIA_port_b                  ;Disable mux 
   017C 97 01         [ 4]  612                     STa      *VIA_port_a                  ;Send X to A/D 
   017E D7 0A         [ 4]  613                     STB      *VIA_shift_reg 
   0180 97 05         [ 4]  614                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            615 ; macro call ->                     CLOSE_SHORT  
   0182 C6 FE         [ 2]  616                     ldb      #SHIFT_2 
                            617  .globl LF33D31
   0184                     618 LF33D31: 
   0184 96 04         [ 4]  619                     LDA      *VIA_t1_cnt_lo 
   0186 81 0A         [ 2]  620                     cmpa     #10 
   0188 22 FA         [ 3]  621                     bhi      LF33D31 
   018A D7 0A         [ 4]  622                     stb      *VIA_shift_reg 
                            623 ; macro call ->                     DRAW_TO_OPEN  -88,50 
   018C CC 00 A8      [ 3]  624                     LDD      #0+((-88)&0xff)                  ;3 A = 0; B = Y 
   018F D7 01         [ 4]  625                     STb      *VIA_port_a                  ; 6 
   0191 97 00         [ 4]  626                     STa      *VIA_port_b                  ; 6 
   0193 C6 32         [ 2]  627                     LDB      #50 
   0195 0C 00         [ 6]  628                     INC      *VIA_port_b                  ;Disable mux 
   0197 D7 01         [ 4]  629                     STB      *VIA_port_a                  ;Send X to A/D 
   0199 C6 3F         [ 2]  630                     LDB      #0b00111111 
   019B D7 0A         [ 4]  631                     STB      *VIA_shift_reg 
   019D 97 05         [ 4]  632                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            633 ; macro call ->                     CLOSE_SHORT  
   019F C6 FE         [ 2]  634                     ldb      #SHIFT_2 
                            635  .globl LF33D33
   01A1                     636 LF33D33: 
   01A1 96 04         [ 4]  637                     LDA      *VIA_t1_cnt_lo 
   01A3 81 0A         [ 2]  638                     cmpa     #10 
   01A5 22 FA         [ 3]  639                     bhi      LF33D33 
   01A7 D7 0A         [ 4]  640                     stb      *VIA_shift_reg 
                            641 ; macro call ->                     DRAW_TO_OPEN  0, 127 
   01A9 CC 00 00      [ 3]  642                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   01AC D7 01         [ 4]  643                     STb      *VIA_port_a                  ; 6 
   01AE 97 00         [ 4]  644                     STa      *VIA_port_b                  ; 6 
   01B0 C6 7F         [ 2]  645                     LDB      #127 
   01B2 0C 00         [ 6]  646                     INC      *VIA_port_b                  ;Disable mux 
   01B4 D7 01         [ 4]  647                     STB      *VIA_port_a                  ;Send X to A/D 
   01B6 C6 3F         [ 2]  648                     LDB      #0b00111111 
   01B8 D7 0A         [ 4]  649                     STB      *VIA_shift_reg 
   01BA 97 05         [ 4]  650                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            651 ; macro call ->                     CLOSE_SHORT  
   01BC C6 FE         [ 2]  652                     ldb      #SHIFT_2 
                            653  .globl LF33D35
   01BE                     654 LF33D35: 
   01BE 96 04         [ 4]  655                     LDA      *VIA_t1_cnt_lo 
   01C0 81 0A         [ 2]  656                     cmpa     #10 
   01C2 22 FA         [ 3]  657                     bhi      LF33D35 
   01C4 D7 0A         [ 4]  658                     stb      *VIA_shift_reg 
                            659 ; macro call ->                     DRAW_TO_OPEN  88,50 
   01C6 CC 00 58      [ 3]  660                     LDD      #0+((88)&0xff)                  ;3 A = 0; B = Y 
   01C9 D7 01         [ 4]  661                     STb      *VIA_port_a                  ; 6 
   01CB 97 00         [ 4]  662                     STa      *VIA_port_b                  ; 6 
   01CD C6 32         [ 2]  663                     LDB      #50 
   01CF 0C 00         [ 6]  664                     INC      *VIA_port_b                  ;Disable mux 
   01D1 D7 01         [ 4]  665                     STB      *VIA_port_a                  ;Send X to A/D 
   01D3 C6 3F         [ 2]  666                     LDB      #0b00111111 
   01D5 D7 0A         [ 4]  667                     STB      *VIA_shift_reg 
   01D7 97 05         [ 4]  668                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            669 ; macro call ->                     CLOSE_SHORT  
   01D9 C6 FE         [ 2]  670                     ldb      #SHIFT_2 
                            671  .globl LF33D37
   01DB                     672 LF33D37: 
   01DB 96 04         [ 4]  673                     LDA      *VIA_t1_cnt_lo 
   01DD 81 0A         [ 2]  674                     cmpa     #10 
   01DF 22 FA         [ 3]  675                     bhi      LF33D37 
   01E1 D7 0A         [ 4]  676                     stb      *VIA_shift_reg 
                            677 ; macro call ->                     DRAW_TO_OPEN_X0  50 
   01E3 CC 00 32      [ 3]  678                     LDD      #0+((50)&0xff)                  ;3 A = 0; B = Y 
   01E6 D7 01         [ 4]  679                     STb      *VIA_port_a                  ; 6 
   01E8 97 00         [ 4]  680                     STa      *VIA_port_b                  ; 6 
   01EA C6 3F         [ 2]  681                     LDB      #0b00111111 
   01EC 0C 00         [ 6]  682                     INC      *VIA_port_b                  ;Disable mux 
   01EE 97 01         [ 4]  683                     STa      *VIA_port_a                  ;Send X to A/D 
   01F0 D7 0A         [ 4]  684                     STB      *VIA_shift_reg 
   01F2 97 05         [ 4]  685                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            686 ; macro call ->                     CLOSE_SHORT  
   01F4 C6 FE         [ 2]  687                     ldb      #SHIFT_2 
                            688  .globl LF33D39
   01F6                     689 LF33D39: 
   01F6 96 04         [ 4]  690                     LDA      *VIA_t1_cnt_lo 
   01F8 81 0A         [ 2]  691                     cmpa     #10 
   01FA 22 FA         [ 3]  692                     bhi      LF33D39 
   01FC D7 0A         [ 4]  693                     stb      *VIA_shift_reg 
                            694 ; macro call ->                     DRAW_TO_OPEN  88, -50 
   01FE CC 00 58      [ 3]  695                     LDD      #0+((88)&0xff)                  ;3 A = 0; B = Y 
   0201 D7 01         [ 4]  696                     STb      *VIA_port_a                  ; 6 
   0203 97 00         [ 4]  697                     STa      *VIA_port_b                  ; 6 
   0205 C6 CE         [ 2]  698                     LDB      #-50 
   0207 0C 00         [ 6]  699                     INC      *VIA_port_b                  ;Disable mux 
   0209 D7 01         [ 4]  700                     STB      *VIA_port_a                  ;Send X to A/D 
   020B C6 3F         [ 2]  701                     LDB      #0b00111111 
   020D D7 0A         [ 4]  702                     STB      *VIA_shift_reg 
   020F 97 05         [ 4]  703                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            704 ; macro call ->                     CLOSE_SHORT  
   0211 C6 FE         [ 2]  705                     ldb      #SHIFT_2 
                            706  .globl LF33D41
   0213                     707 LF33D41: 
   0213 96 04         [ 4]  708                     LDA      *VIA_t1_cnt_lo 
   0215 81 0A         [ 2]  709                     cmpa     #10 
   0217 22 FA         [ 3]  710                     bhi      LF33D41 
   0219 D7 0A         [ 4]  711                     stb      *VIA_shift_reg 
                            712 ; macro call ->  WAIT12
   021B 1F 88         [ 6]  713 	tfr a,a; wait 12 cycles
   021D 1F 88         [ 6]  714      tfr a,a
                            715 ; macro call ->                     _ZERO_VECTOR_BEAM  
   021F C6 CC         [ 2]  716                     LDB      #0xCC                         ; 2 
   0221 D7 0C         [ 4]  717                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                            718 ; macro call ->  WAIT24
   0223 34 71         [ 9]  719   pshs x,y,u,cc; wait 24 cycles
   0225 35 71         [ 9]  720   puls x,y,u,cc
                            721 ; third
   0227 86 CE         [ 2]  722                     LDA      #0xCE                         ;Blank low, zero high? 
   0229 97 0C         [ 4]  723                     STA      *VIA_cntl                    ; 
   022B 86 3E         [ 2]  724                     LDA      #64 -2                       ; scalefactor 
   022D 97 04         [ 4]  725                     STA      *VIA_t1_cnt_lo 
                            726 ; macro call ->                     MOVE_TO_OPEN  127, 73 
                            727 ; assuming SHIFT is zeri
   022F CC 00 7F      [ 3]  728                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   0232 D7 01         [ 4]  729                     STb      *VIA_port_a                  ; 6 
   0234 97 00         [ 4]  730                     STa      *VIA_port_b                  ; 6 
   0236 C6 49         [ 2]  731                     LDB      #73 
   0238 0C 00         [ 6]  732                     INC      *VIA_port_b                  ;Disable mux 
   023A D7 01         [ 4]  733                     STB      *VIA_port_a                  ;Send X to A/D 
   023C 97 05         [ 4]  734                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
   023E 86 46         [ 2]  735                     LDA      #71 -1                       ;(0x7f/11) ; 2 scalefactor 
   0240 97 04         [ 4]  736                     STA      *VIA_t1_cnt_lo               ; 4 
                            737 ; macro call ->                     CLOSE    
   0242 86 40         [ 2]  738                     LDA      #0x40                         ; 
                            739  .globl LF33D46
   0244 95 0D         [ 4]  740 LF33D46:              BITA     *VIA_int_flags               ; 
   0246 27 FC         [ 3]  741                     BEQ      LF33D46                        ; 
                            742 ; macro call ->                     DRAW_TO_OPEN  -90, 48 
   0248 CC 00 A6      [ 3]  743                     LDD      #0+((-90)&0xff)                  ;3 A = 0; B = Y 
   024B D7 01         [ 4]  744                     STb      *VIA_port_a                  ; 6 
   024D 97 00         [ 4]  745                     STa      *VIA_port_b                  ; 6 
   024F C6 30         [ 2]  746                     LDB      #48 
   0251 0C 00         [ 6]  747                     INC      *VIA_port_b                  ;Disable mux 
   0253 D7 01         [ 4]  748                     STB      *VIA_port_a                  ;Send X to A/D 
   0255 C6 3F         [ 2]  749                     LDB      #0b00111111 
   0257 D7 0A         [ 4]  750                     STB      *VIA_shift_reg 
   0259 97 05         [ 4]  751                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            752 ; macro call ->                     CLOSE_SHORT  
   025B C6 FE         [ 2]  753                     ldb      #SHIFT_2 
                            754  .globl LF33D48
   025D                     755 LF33D48: 
   025D 96 04         [ 4]  756                     LDA      *VIA_t1_cnt_lo 
   025F 81 0A         [ 2]  757                     cmpa     #10 
   0261 22 FA         [ 3]  758                     bhi      LF33D48 
   0263 D7 0A         [ 4]  759                     stb      *VIA_shift_reg 
                            760 ; macro call ->                     DRAW_TO_OPEN_X0  -48 
   0265 CC 00 D0      [ 3]  761                     LDD      #0+((-48)&0xff)                  ;3 A = 0; B = Y 
   0268 D7 01         [ 4]  762                     STb      *VIA_port_a                  ; 6 
   026A 97 00         [ 4]  763                     STa      *VIA_port_b                  ; 6 
   026C C6 3F         [ 2]  764                     LDB      #0b00111111 
   026E 0C 00         [ 6]  765                     INC      *VIA_port_b                  ;Disable mux 
   0270 97 01         [ 4]  766                     STa      *VIA_port_a                  ;Send X to A/D 
   0272 D7 0A         [ 4]  767                     STB      *VIA_shift_reg 
   0274 97 05         [ 4]  768                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            769 ; macro call ->                     CLOSE_SHORT  
   0276 C6 FE         [ 2]  770                     ldb      #SHIFT_2 
                            771  .globl LF33D50
   0278                     772 LF33D50: 
   0278 96 04         [ 4]  773                     LDA      *VIA_t1_cnt_lo 
   027A 81 0A         [ 2]  774                     cmpa     #10 
   027C 22 FA         [ 3]  775                     bhi      LF33D50 
   027E D7 0A         [ 4]  776                     stb      *VIA_shift_reg 
                            777 ; macro call ->                     DRAW_TO_OPEN  -90, -48 
   0280 CC 00 A6      [ 3]  778                     LDD      #0+((-90)&0xff)                  ;3 A = 0; B = Y 
   0283 D7 01         [ 4]  779                     STb      *VIA_port_a                  ; 6 
   0285 97 00         [ 4]  780                     STa      *VIA_port_b                  ; 6 
   0287 C6 D0         [ 2]  781                     LDB      #-48 
   0289 0C 00         [ 6]  782                     INC      *VIA_port_b                  ;Disable mux 
   028B D7 01         [ 4]  783                     STB      *VIA_port_a                  ;Send X to A/D 
   028D C6 3F         [ 2]  784                     LDB      #0b00111111 
   028F D7 0A         [ 4]  785                     STB      *VIA_shift_reg 
   0291 97 05         [ 4]  786                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            787 ; macro call ->                     CLOSE_SHORT  
   0293 C6 FE         [ 2]  788                     ldb      #SHIFT_2 
                            789  .globl LF33D52
   0295                     790 LF33D52: 
   0295 96 04         [ 4]  791                     LDA      *VIA_t1_cnt_lo 
   0297 81 0A         [ 2]  792                     cmpa     #10 
   0299 22 FA         [ 3]  793                     bhi      LF33D52 
   029B D7 0A         [ 4]  794                     stb      *VIA_shift_reg 
                            795 ; macro call ->                     DRAW_TO_OPEN  0, -127 
   029D CC 00 00      [ 3]  796                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   02A0 D7 01         [ 4]  797                     STb      *VIA_port_a                  ; 6 
   02A2 97 00         [ 4]  798                     STa      *VIA_port_b                  ; 6 
   02A4 C6 81         [ 2]  799                     LDB      #-127 
   02A6 0C 00         [ 6]  800                     INC      *VIA_port_b                  ;Disable mux 
   02A8 D7 01         [ 4]  801                     STB      *VIA_port_a                  ;Send X to A/D 
   02AA C6 3F         [ 2]  802                     LDB      #0b00111111 
   02AC D7 0A         [ 4]  803                     STB      *VIA_shift_reg 
   02AE 97 05         [ 4]  804                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            805 ; macro call ->                     CLOSE_SHORT  
   02B0 C6 FE         [ 2]  806                     ldb      #SHIFT_2 
                            807  .globl LF33D54
   02B2                     808 LF33D54: 
   02B2 96 04         [ 4]  809                     LDA      *VIA_t1_cnt_lo 
   02B4 81 0A         [ 2]  810                     cmpa     #10 
   02B6 22 FA         [ 3]  811                     bhi      LF33D54 
   02B8 D7 0A         [ 4]  812                     stb      *VIA_shift_reg 
                            813 ; macro call ->                     DRAW_TO_OPEN  90, -48 
   02BA CC 00 5A      [ 3]  814                     LDD      #0+((90)&0xff)                  ;3 A = 0; B = Y 
   02BD D7 01         [ 4]  815                     STb      *VIA_port_a                  ; 6 
   02BF 97 00         [ 4]  816                     STa      *VIA_port_b                  ; 6 
   02C1 C6 D0         [ 2]  817                     LDB      #-48 
   02C3 0C 00         [ 6]  818                     INC      *VIA_port_b                  ;Disable mux 
   02C5 D7 01         [ 4]  819                     STB      *VIA_port_a                  ;Send X to A/D 
   02C7 C6 3F         [ 2]  820                     LDB      #0b00111111 
   02C9 D7 0A         [ 4]  821                     STB      *VIA_shift_reg 
   02CB 97 05         [ 4]  822                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            823 ; macro call ->                     CLOSE_SHORT  
   02CD C6 FE         [ 2]  824                     ldb      #SHIFT_2 
                            825  .globl LF33D56
   02CF                     826 LF33D56: 
   02CF 96 04         [ 4]  827                     LDA      *VIA_t1_cnt_lo 
   02D1 81 0A         [ 2]  828                     cmpa     #10 
   02D3 22 FA         [ 3]  829                     bhi      LF33D56 
   02D5 D7 0A         [ 4]  830                     stb      *VIA_shift_reg 
                            831 ; macro call ->                     DRAW_TO_OPEN_X0  48 
   02D7 CC 00 30      [ 3]  832                     LDD      #0+((48)&0xff)                  ;3 A = 0; B = Y 
   02DA D7 01         [ 4]  833                     STb      *VIA_port_a                  ; 6 
   02DC 97 00         [ 4]  834                     STa      *VIA_port_b                  ; 6 
   02DE C6 3F         [ 2]  835                     LDB      #0b00111111 
   02E0 0C 00         [ 6]  836                     INC      *VIA_port_b                  ;Disable mux 
   02E2 97 01         [ 4]  837                     STa      *VIA_port_a                  ;Send X to A/D 
   02E4 D7 0A         [ 4]  838                     STB      *VIA_shift_reg 
   02E6 97 05         [ 4]  839                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            840 ; macro call ->                     CLOSE_SHORT  
   02E8 C6 FE         [ 2]  841                     ldb      #SHIFT_2 
                            842  .globl LF33D58
   02EA                     843 LF33D58: 
   02EA 96 04         [ 4]  844                     LDA      *VIA_t1_cnt_lo 
   02EC 81 0A         [ 2]  845                     cmpa     #10 
   02EE 22 FA         [ 3]  846                     bhi      LF33D58 
   02F0 D7 0A         [ 4]  847                     stb      *VIA_shift_reg 
                            848 ; macro call ->                     DRAW_TO_OPEN  90, 48 
   02F2 CC 00 5A      [ 3]  849                     LDD      #0+((90)&0xff)                  ;3 A = 0; B = Y 
   02F5 D7 01         [ 4]  850                     STb      *VIA_port_a                  ; 6 
   02F7 97 00         [ 4]  851                     STa      *VIA_port_b                  ; 6 
   02F9 C6 30         [ 2]  852                     LDB      #48 
   02FB 0C 00         [ 6]  853                     INC      *VIA_port_b                  ;Disable mux 
   02FD D7 01         [ 4]  854                     STB      *VIA_port_a                  ;Send X to A/D 
   02FF C6 3F         [ 2]  855                     LDB      #0b00111111 
   0301 D7 0A         [ 4]  856                     STB      *VIA_shift_reg 
   0303 97 05         [ 4]  857                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            858 ; macro call ->                     CLOSE_SHORT  
   0305 C6 FE         [ 2]  859                     ldb      #SHIFT_2 
                            860  .globl LF33D60
   0307                     861 LF33D60: 
   0307 96 04         [ 4]  862                     LDA      *VIA_t1_cnt_lo 
   0309 81 0A         [ 2]  863                     cmpa     #10 
   030B 22 FA         [ 3]  864                     bhi      LF33D60 
   030D D7 0A         [ 4]  865                     stb      *VIA_shift_reg 
                            866 ; macro call ->                     DRAW_TO_OPEN  0, 127 
   030F CC 00 00      [ 3]  867                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   0312 D7 01         [ 4]  868                     STb      *VIA_port_a                  ; 6 
   0314 97 00         [ 4]  869                     STa      *VIA_port_b                  ; 6 
   0316 C6 7F         [ 2]  870                     LDB      #127 
   0318 0C 00         [ 6]  871                     INC      *VIA_port_b                  ;Disable mux 
   031A D7 01         [ 4]  872                     STB      *VIA_port_a                  ;Send X to A/D 
   031C C6 3F         [ 2]  873                     LDB      #0b00111111 
   031E D7 0A         [ 4]  874                     STB      *VIA_shift_reg 
   0320 97 05         [ 4]  875                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            876 ; macro call ->                     CLOSE_SHORT  
   0322 C6 FE         [ 2]  877                     ldb      #SHIFT_2 
                            878  .globl LF33D62
   0324                     879 LF33D62: 
   0324 96 04         [ 4]  880                     LDA      *VIA_t1_cnt_lo 
   0326 81 0A         [ 2]  881                     cmpa     #10 
   0328 22 FA         [ 3]  882                     bhi      LF33D62 
   032A D7 0A         [ 4]  883                     stb      *VIA_shift_reg 
                            884 ; clra
                            885 ; macro call ->  WAIT12
   032C 1F 88         [ 6]  886 	tfr a,a; wait 12 cycles
   032E 1F 88         [ 6]  887      tfr a,a
                            888 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0330 C6 CC         [ 2]  889                     LDB      #0xCC                         ; 2 
   0332 D7 0C         [ 4]  890                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                            891 ; macro call ->  WAIT24
   0334 34 71         [ 9]  892   pshs x,y,u,cc; wait 24 cycles
   0336 35 71         [ 9]  893   puls x,y,u,cc
                            894 ; fourth
   0338 86 CE         [ 2]  895                     LDA      #0xCE                         ;Blank low, zero high? 
   033A 97 0C         [ 4]  896                     STA      *VIA_cntl                    ; 
   033C 86 59         [ 2]  897                     LDA      #89                          ; scalefactor 
   033E 97 04         [ 4]  898                     STA      *VIA_t1_cnt_lo 
                            899 ; macro call ->                     MOVE_TO_OPEN  -25, 127 
                            900 ; assuming SHIFT is zeri
   0340 CC 00 E7      [ 3]  901                     LDD      #0+((-25)&0xff)                  ;3 A = 0; B = Y 
   0343 D7 01         [ 4]  902                     STb      *VIA_port_a                  ; 6 
   0345 97 00         [ 4]  903                     STa      *VIA_port_b                  ; 6 
   0347 C6 7F         [ 2]  904                     LDB      #127 
   0349 0C 00         [ 6]  905                     INC      *VIA_port_b                  ;Disable mux 
   034B D7 01         [ 4]  906                     STB      *VIA_port_a                  ;Send X to A/D 
   034D 97 05         [ 4]  907                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
   034F 86 69         [ 2]  908                     LDA      #105                         ;(0x7f/11) ; 2 scalefactor 
   0351 97 04         [ 4]  909                     STA      *VIA_t1_cnt_lo               ; 4 
                            910 ; macro call ->                     CLOSE    
   0353 86 40         [ 2]  911                     LDA      #0x40                         ; 
                            912  .globl LF33D67
   0355 95 0D         [ 4]  913 LF33D67:              BITA     *VIA_int_flags               ; 
   0357 27 FC         [ 3]  914                     BEQ      LF33D67                        ; 
                            915 ; macro call ->                     DRAW_TO_OPEN_X0  43 
   0359 CC 00 2B      [ 3]  916                     LDD      #0+((43)&0xff)                  ;3 A = 0; B = Y 
   035C D7 01         [ 4]  917                     STb      *VIA_port_a                  ; 6 
   035E 97 00         [ 4]  918                     STa      *VIA_port_b                  ; 6 
   0360 C6 3F         [ 2]  919                     LDB      #0b00111111 
   0362 0C 00         [ 6]  920                     INC      *VIA_port_b                  ;Disable mux 
   0364 97 01         [ 4]  921                     STa      *VIA_port_a                  ;Send X to A/D 
   0366 D7 0A         [ 4]  922                     STB      *VIA_shift_reg 
   0368 97 05         [ 4]  923                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            924 ; macro call ->                     CLOSE_SHORT  
   036A C6 FE         [ 2]  925                     ldb      #SHIFT_2 
                            926  .globl LF33D69
   036C                     927 LF33D69: 
   036C 96 04         [ 4]  928                     LDA      *VIA_t1_cnt_lo 
   036E 81 0A         [ 2]  929                     cmpa     #10 
   0370 22 FA         [ 3]  930                     bhi      LF33D69 
   0372 D7 0A         [ 4]  931                     stb      *VIA_shift_reg 
                            932 ; macro call ->                     DRAW_TO_OPEN  88, -45 
   0374 CC 00 58      [ 3]  933                     LDD      #0+((88)&0xff)                  ;3 A = 0; B = Y 
   0377 D7 01         [ 4]  934                     STb      *VIA_port_a                  ; 6 
   0379 97 00         [ 4]  935                     STa      *VIA_port_b                  ; 6 
   037B C6 D3         [ 2]  936                     LDB      #-45 
   037D 0C 00         [ 6]  937                     INC      *VIA_port_b                  ;Disable mux 
   037F D7 01         [ 4]  938                     STB      *VIA_port_a                  ;Send X to A/D 
   0381 C6 3F         [ 2]  939                     LDB      #0b00111111 
   0383 D7 0A         [ 4]  940                     STB      *VIA_shift_reg 
   0385 97 05         [ 4]  941                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            942 ; macro call ->                     CLOSE_SHORT  
   0387 C6 FE         [ 2]  943                     ldb      #SHIFT_2 
                            944  .globl LF33D71
   0389                     945 LF33D71: 
   0389 96 04         [ 4]  946                     LDA      *VIA_t1_cnt_lo 
   038B 81 0A         [ 2]  947                     cmpa     #10 
   038D 22 FA         [ 3]  948                     bhi      LF33D71 
   038F D7 0A         [ 4]  949                     stb      *VIA_shift_reg 
                            950 ; macro call ->                     DRAW_TO_OPEN  0, -127 
   0391 CC 00 00      [ 3]  951                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   0394 D7 01         [ 4]  952                     STb      *VIA_port_a                  ; 6 
   0396 97 00         [ 4]  953                     STa      *VIA_port_b                  ; 6 
   0398 C6 81         [ 2]  954                     LDB      #-127 
   039A 0C 00         [ 6]  955                     INC      *VIA_port_b                  ;Disable mux 
   039C D7 01         [ 4]  956                     STB      *VIA_port_a                  ;Send X to A/D 
   039E C6 3F         [ 2]  957                     LDB      #0b00111111 
   03A0 D7 0A         [ 4]  958                     STB      *VIA_shift_reg 
   03A2 97 05         [ 4]  959                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            960 ; macro call ->                     CLOSE_SHORT  
   03A4 C6 FE         [ 2]  961                     ldb      #SHIFT_2 
                            962  .globl LF33D73
   03A6                     963 LF33D73: 
   03A6 96 04         [ 4]  964                     LDA      *VIA_t1_cnt_lo 
   03A8 81 0A         [ 2]  965                     cmpa     #10 
   03AA 22 FA         [ 3]  966                     bhi      LF33D73 
   03AC D7 0A         [ 4]  967                     stb      *VIA_shift_reg 
                            968 ; macro call ->                     DRAW_TO_OPEN  -88, -45 
   03AE CC 00 A8      [ 3]  969                     LDD      #0+((-88)&0xff)                  ;3 A = 0; B = Y 
   03B1 D7 01         [ 4]  970                     STb      *VIA_port_a                  ; 6 
   03B3 97 00         [ 4]  971                     STa      *VIA_port_b                  ; 6 
   03B5 C6 D3         [ 2]  972                     LDB      #-45 
   03B7 0C 00         [ 6]  973                     INC      *VIA_port_b                  ;Disable mux 
   03B9 D7 01         [ 4]  974                     STB      *VIA_port_a                  ;Send X to A/D 
   03BB C6 3F         [ 2]  975                     LDB      #0b00111111 
   03BD D7 0A         [ 4]  976                     STB      *VIA_shift_reg 
   03BF 97 05         [ 4]  977                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            978 ; macro call ->                     CLOSE_SHORT  
   03C1 C6 FE         [ 2]  979                     ldb      #SHIFT_2 
                            980  .globl LF33D75
   03C3                     981 LF33D75: 
   03C3 96 04         [ 4]  982                     LDA      *VIA_t1_cnt_lo 
   03C5 81 0A         [ 2]  983                     cmpa     #10 
   03C7 22 FA         [ 3]  984                     bhi      LF33D75 
   03C9 D7 0A         [ 4]  985                     stb      *VIA_shift_reg 
                            986 ; macro call ->                     DRAW_TO_OPEN_X0  -43 
   03CB CC 00 D5      [ 3]  987                     LDD      #0+((-43)&0xff)                  ;3 A = 0; B = Y 
   03CE D7 01         [ 4]  988                     STb      *VIA_port_a                  ; 6 
   03D0 97 00         [ 4]  989                     STa      *VIA_port_b                  ; 6 
   03D2 C6 3F         [ 2]  990                     LDB      #0b00111111 
   03D4 0C 00         [ 6]  991                     INC      *VIA_port_b                  ;Disable mux 
   03D6 97 01         [ 4]  992                     STa      *VIA_port_a                  ;Send X to A/D 
   03D8 D7 0A         [ 4]  993                     STB      *VIA_shift_reg 
   03DA 97 05         [ 4]  994                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                            995 ; macro call ->                     CLOSE_SHORT  
   03DC C6 FE         [ 2]  996                     ldb      #SHIFT_2 
                            997  .globl LF33D77
   03DE                     998 LF33D77: 
   03DE 96 04         [ 4]  999                     LDA      *VIA_t1_cnt_lo 
   03E0 81 0A         [ 2] 1000                     cmpa     #10 
   03E2 22 FA         [ 3] 1001                     bhi      LF33D77 
   03E4 D7 0A         [ 4] 1002                     stb      *VIA_shift_reg 
                           1003 ; macro call ->                     DRAW_TO_OPEN  -88, 45 
   03E6 CC 00 A8      [ 3] 1004                     LDD      #0+((-88)&0xff)                  ;3 A = 0; B = Y 
   03E9 D7 01         [ 4] 1005                     STb      *VIA_port_a                  ; 6 
   03EB 97 00         [ 4] 1006                     STa      *VIA_port_b                  ; 6 
   03ED C6 2D         [ 2] 1007                     LDB      #45 
   03EF 0C 00         [ 6] 1008                     INC      *VIA_port_b                  ;Disable mux 
   03F1 D7 01         [ 4] 1009                     STB      *VIA_port_a                  ;Send X to A/D 
   03F3 C6 3F         [ 2] 1010                     LDB      #0b00111111 
   03F5 D7 0A         [ 4] 1011                     STB      *VIA_shift_reg 
   03F7 97 05         [ 4] 1012                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1013 ; macro call ->                     CLOSE_SHORT  
   03F9 C6 FE         [ 2] 1014                     ldb      #SHIFT_2 
                           1015  .globl LF33D79
   03FB                    1016 LF33D79: 
   03FB 96 04         [ 4] 1017                     LDA      *VIA_t1_cnt_lo 
   03FD 81 0A         [ 2] 1018                     cmpa     #10 
   03FF 22 FA         [ 3] 1019                     bhi      LF33D79 
   0401 D7 0A         [ 4] 1020                     stb      *VIA_shift_reg 
                           1021 ; macro call ->                     DRAW_TO_OPEN  0, 127 
   0403 CC 00 00      [ 3] 1022                     LDD      #0+((0)&0xff)                  ;3 A = 0; B = Y 
   0406 D7 01         [ 4] 1023                     STb      *VIA_port_a                  ; 6 
   0408 97 00         [ 4] 1024                     STa      *VIA_port_b                  ; 6 
   040A C6 7F         [ 2] 1025                     LDB      #127 
   040C 0C 00         [ 6] 1026                     INC      *VIA_port_b                  ;Disable mux 
   040E D7 01         [ 4] 1027                     STB      *VIA_port_a                  ;Send X to A/D 
   0410 C6 3F         [ 2] 1028                     LDB      #0b00111111 
   0412 D7 0A         [ 4] 1029                     STB      *VIA_shift_reg 
   0414 97 05         [ 4] 1030                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1031 ; macro call ->                     CLOSE_SHORT  
   0416 C6 FE         [ 2] 1032                     ldb      #SHIFT_2 
                           1033  .globl LF33D81
   0418                    1034 LF33D81: 
   0418 96 04         [ 4] 1035                     LDA      *VIA_t1_cnt_lo 
   041A 81 0A         [ 2] 1036                     cmpa     #10 
   041C 22 FA         [ 3] 1037                     bhi      LF33D81 
   041E D7 0A         [ 4] 1038                     stb      *VIA_shift_reg 
                           1039 ; macro call ->                     DRAW_TO_OPEN  88, 45 
   0420 CC 00 58      [ 3] 1040                     LDD      #0+((88)&0xff)                  ;3 A = 0; B = Y 
   0423 D7 01         [ 4] 1041                     STb      *VIA_port_a                  ; 6 
   0425 97 00         [ 4] 1042                     STa      *VIA_port_b                  ; 6 
   0427 C6 2D         [ 2] 1043                     LDB      #45 
   0429 0C 00         [ 6] 1044                     INC      *VIA_port_b                  ;Disable mux 
   042B D7 01         [ 4] 1045                     STB      *VIA_port_a                  ;Send X to A/D 
   042D C6 3F         [ 2] 1046                     LDB      #0b00111111 
   042F D7 0A         [ 4] 1047                     STB      *VIA_shift_reg 
   0431 97 05         [ 4] 1048                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1049 ; macro call ->                     CLOSE_SHORT  
   0433 C6 FE         [ 2] 1050                     ldb      #SHIFT_2 
                           1051  .globl LF33D83
   0435                    1052 LF33D83: 
   0435 96 04         [ 4] 1053                     LDA      *VIA_t1_cnt_lo 
   0437 81 0A         [ 2] 1054                     cmpa     #10 
   0439 22 FA         [ 3] 1055                     bhi      LF33D83 
   043B D7 0A         [ 4] 1056                     stb      *VIA_shift_reg 
                           1057 ; macro call ->  WAIT12
   043D 1F 88         [ 6] 1058 	tfr a,a; wait 12 cycles
   043F 1F 88         [ 6] 1059      tfr a,a
                           1060 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0441 C6 CC         [ 2] 1061                     LDB      #0xCC                         ; 2 
   0443 D7 0C         [ 4] 1062                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1063 ; macro call ->  WAIT24
   0445 34 71         [ 9] 1064   pshs x,y,u,cc; wait 24 cycles
   0447 35 71         [ 9] 1065   puls x,y,u,cc
                           1066 ; Do the Rays
                           1067 ; short rays
   0449 86 CE         [ 2] 1068                     LDA      #0xCE                         ;Blank low, zero high? 
   044B 97 0C         [ 4] 1069                     STA      *VIA_cntl                    ; 
   044D 86 0D         [ 2] 1070                     LDA      #13                          ; scalefactor 
   044F 97 04         [ 4] 1071                     STA      *VIA_t1_cnt_lo 
                           1072 ; macro call ->                     MOVE_TO_OPEN  -29, -127 
                           1073 ; assuming SHIFT is zeri
   0451 CC 00 E3      [ 3] 1074                     LDD      #0+((-29)&0xff)                  ;3 A = 0; B = Y 
   0454 D7 01         [ 4] 1075                     STb      *VIA_port_a                  ; 6 
   0456 97 00         [ 4] 1076                     STa      *VIA_port_b                  ; 6 
   0458 C6 81         [ 2] 1077                     LDB      #-127 
   045A 0C 00         [ 6] 1078                     INC      *VIA_port_b                  ;Disable mux 
   045C D7 01         [ 4] 1079                     STB      *VIA_port_a                  ;Send X to A/D 
   045E 97 05         [ 4] 1080                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1081 ; macro call ->                     WAIT2
   0460 12            [ 2] 1082  nop ; wait 2 cycles
   0461 86 4A         [ 2] 1083                     LDA      #74                          ; scalefactor 
   0463 97 04         [ 4] 1084                     STA      *VIA_t1_cnt_lo 
                           1085 ; macro call ->                     DRAW_TO_OPEN  -25, -127 
   0465 CC 00 E7      [ 3] 1086                     LDD      #0+((-25)&0xff)                  ;3 A = 0; B = Y 
   0468 D7 01         [ 4] 1087                     STb      *VIA_port_a                  ; 6 
   046A 97 00         [ 4] 1088                     STa      *VIA_port_b                  ; 6 
   046C C6 81         [ 2] 1089                     LDB      #-127 
   046E 0C 00         [ 6] 1090                     INC      *VIA_port_b                  ;Disable mux 
   0470 D7 01         [ 4] 1091                     STB      *VIA_port_a                  ;Send X to A/D 
   0472 C6 3F         [ 2] 1092                     LDB      #0b00111111 
   0474 D7 0A         [ 4] 1093                     STB      *VIA_shift_reg 
   0476 97 05         [ 4] 1094                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1095 ; macro call ->                     CLOSE_SHORT  
   0478 C6 FE         [ 2] 1096                     ldb      #SHIFT_2 
                           1097  .globl LF33D90
   047A                    1098 LF33D90: 
   047A 96 04         [ 4] 1099                     LDA      *VIA_t1_cnt_lo 
   047C 81 0A         [ 2] 1100                     cmpa     #10 
   047E 22 FA         [ 3] 1101                     bhi      LF33D90 
   0480 D7 0A         [ 4] 1102                     stb      *VIA_shift_reg 
                           1103 ; macro call ->  WAIT12
   0482 1F 88         [ 6] 1104 	tfr a,a; wait 12 cycles
   0484 1F 88         [ 6] 1105      tfr a,a
                           1106 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0486 C6 CC         [ 2] 1107                     LDB      #0xCC                         ; 2 
   0488 D7 0C         [ 4] 1108                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1109 ; macro call ->  WAIT24
   048A 34 71         [ 9] 1110   pshs x,y,u,cc; wait 24 cycles
   048C 35 71         [ 9] 1111   puls x,y,u,cc
   048E 86 CE         [ 2] 1112                     LDA      #0xCE                         ;Blank low, zero high? 
   0490 97 0C         [ 4] 1113                     STA      *VIA_cntl                    ; 
   0492 86 0D         [ 2] 1114                     LDA      #13                          ; scalefactor 
   0494 97 04         [ 4] 1115                     STA      *VIA_t1_cnt_lo 
                           1116 ; macro call ->                     MOVE_TO_OPEN  29, -123 
                           1117 ; assuming SHIFT is zeri
   0496 CC 00 1D      [ 3] 1118                     LDD      #0+((29)&0xff)                  ;3 A = 0; B = Y 
   0499 D7 01         [ 4] 1119                     STb      *VIA_port_a                  ; 6 
   049B 97 00         [ 4] 1120                     STa      *VIA_port_b                  ; 6 
   049D C6 85         [ 2] 1121                     LDB      #-123 
   049F 0C 00         [ 6] 1122                     INC      *VIA_port_b                  ;Disable mux 
   04A1 D7 01         [ 4] 1123                     STB      *VIA_port_a                  ;Send X to A/D 
   04A3 97 05         [ 4] 1124                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1125 ; macro call ->                     WAIT4 
   04A5 12            [ 2] 1126  nop ; wait 4 cycles
   04A6 12            [ 2] 1127  nop 
   04A7 86 4A         [ 2] 1128                     LDA      #74                          ; scalefactor 
   04A9 97 04         [ 4] 1129                     STA      *VIA_t1_cnt_lo 
                           1130 ; macro call ->                     DRAW_TO_OPEN  24, -127 
   04AB CC 00 18      [ 3] 1131                     LDD      #0+((24)&0xff)                  ;3 A = 0; B = Y 
   04AE D7 01         [ 4] 1132                     STb      *VIA_port_a                  ; 6 
   04B0 97 00         [ 4] 1133                     STa      *VIA_port_b                  ; 6 
   04B2 C6 81         [ 2] 1134                     LDB      #-127 
   04B4 0C 00         [ 6] 1135                     INC      *VIA_port_b                  ;Disable mux 
   04B6 D7 01         [ 4] 1136                     STB      *VIA_port_a                  ;Send X to A/D 
   04B8 C6 3F         [ 2] 1137                     LDB      #0b00111111 
   04BA D7 0A         [ 4] 1138                     STB      *VIA_shift_reg 
   04BC 97 05         [ 4] 1139                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1140 ; macro call ->                     CLOSE_SHORT  
   04BE C6 FE         [ 2] 1141                     ldb      #SHIFT_2 
                           1142  .globl LF33D97
   04C0                    1143 LF33D97: 
   04C0 96 04         [ 4] 1144                     LDA      *VIA_t1_cnt_lo 
   04C2 81 0A         [ 2] 1145                     cmpa     #10 
   04C4 22 FA         [ 3] 1146                     bhi      LF33D97 
   04C6 D7 0A         [ 4] 1147                     stb      *VIA_shift_reg 
                           1148 ; macro call ->  WAIT12
   04C8 1F 88         [ 6] 1149 	tfr a,a; wait 12 cycles
   04CA 1F 88         [ 6] 1150      tfr a,a
                           1151 ; macro call ->                     _ZERO_VECTOR_BEAM  
   04CC C6 CC         [ 2] 1152                     LDB      #0xCC                         ; 2 
   04CE D7 0C         [ 4] 1153                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1154 ; macro call ->  WAIT24
   04D0 34 71         [ 9] 1155   pshs x,y,u,cc; wait 24 cycles
   04D2 35 71         [ 9] 1156   puls x,y,u,cc
   04D4 86 CE         [ 2] 1157                     LDA      #0xCE                         ;Blank low, zero high? 
   04D6 97 0C         [ 4] 1158                     STA      *VIA_cntl                    ; 
   04D8 86 0D         [ 2] 1159                     LDA      #13                          ; scalefactor 
   04DA 97 04         [ 4] 1160                     STA      *VIA_t1_cnt_lo 
                           1161 ; macro call ->                     MOVE_TO_OPEN  25, 127 
                           1162 ; assuming SHIFT is zeri
   04DC CC 00 19      [ 3] 1163                     LDD      #0+((25)&0xff)                  ;3 A = 0; B = Y 
   04DF D7 01         [ 4] 1164                     STb      *VIA_port_a                  ; 6 
   04E1 97 00         [ 4] 1165                     STa      *VIA_port_b                  ; 6 
   04E3 C6 7F         [ 2] 1166                     LDB      #127 
   04E5 0C 00         [ 6] 1167                     INC      *VIA_port_b                  ;Disable mux 
   04E7 D7 01         [ 4] 1168                     STB      *VIA_port_a                  ;Send X to A/D 
   04E9 97 05         [ 4] 1169                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1170 ; macro call ->                     WAIT2
   04EB 12            [ 2] 1171  nop ; wait 2 cycles
   04EC 86 4A         [ 2] 1172                     LDA      #74                          ; scalefactor 
   04EE 97 04         [ 4] 1173                     STA      *VIA_t1_cnt_lo 
                           1174 ; macro call ->                     DRAW_TO_OPEN  25, 127 
   04F0 CC 00 19      [ 3] 1175                     LDD      #0+((25)&0xff)                  ;3 A = 0; B = Y 
   04F3 D7 01         [ 4] 1176                     STb      *VIA_port_a                  ; 6 
   04F5 97 00         [ 4] 1177                     STa      *VIA_port_b                  ; 6 
   04F7 C6 7F         [ 2] 1178                     LDB      #127 
   04F9 0C 00         [ 6] 1179                     INC      *VIA_port_b                  ;Disable mux 
   04FB D7 01         [ 4] 1180                     STB      *VIA_port_a                  ;Send X to A/D 
   04FD C6 3F         [ 2] 1181                     LDB      #0b00111111 
   04FF D7 0A         [ 4] 1182                     STB      *VIA_shift_reg 
   0501 97 05         [ 4] 1183                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1184 ; macro call ->                     CLOSE_SHORT  
   0503 C6 FE         [ 2] 1185                     ldb      #SHIFT_2 
                           1186  .globl LF33D104
   0505                    1187 LF33D104: 
   0505 96 04         [ 4] 1188                     LDA      *VIA_t1_cnt_lo 
   0507 81 0A         [ 2] 1189                     cmpa     #10 
   0509 22 FA         [ 3] 1190                     bhi      LF33D104 
   050B D7 0A         [ 4] 1191                     stb      *VIA_shift_reg 
                           1192 ; macro call ->  WAIT12
   050D 1F 88         [ 6] 1193 	tfr a,a; wait 12 cycles
   050F 1F 88         [ 6] 1194      tfr a,a
                           1195 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0511 C6 CC         [ 2] 1196                     LDB      #0xCC                         ; 2 
   0513 D7 0C         [ 4] 1197                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1198 ; macro call ->  WAIT24
   0515 34 71         [ 9] 1199   pshs x,y,u,cc; wait 24 cycles
   0517 35 71         [ 9] 1200   puls x,y,u,cc
   0519 86 CE         [ 2] 1201                     LDA      #0xCE                         ;Blank low, zero high? 
   051B 97 0C         [ 4] 1202                     STA      *VIA_cntl                    ; 
   051D 86 0D         [ 2] 1203                     LDA      #13                          ; scalefactor 
   051F 97 04         [ 4] 1204                     STA      *VIA_t1_cnt_lo 
                           1205 ; macro call ->                     MOVE_TO_OPEN  -35, 123 
                           1206 ; assuming SHIFT is zeri
   0521 CC 00 DD      [ 3] 1207                     LDD      #0+((-35)&0xff)                  ;3 A = 0; B = Y 
   0524 D7 01         [ 4] 1208                     STb      *VIA_port_a                  ; 6 
   0526 97 00         [ 4] 1209                     STa      *VIA_port_b                  ; 6 
   0528 C6 7B         [ 2] 1210                     LDB      #123 
   052A 0C 00         [ 6] 1211                     INC      *VIA_port_b                  ;Disable mux 
   052C D7 01         [ 4] 1212                     STB      *VIA_port_a                  ;Send X to A/D 
   052E 97 05         [ 4] 1213                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1214 ; macro call ->                     WAIT4 
   0530 12            [ 2] 1215  nop ; wait 4 cycles
   0531 12            [ 2] 1216  nop 
   0532 86 4A         [ 2] 1217                     LDA      #74                          ; scalefactor 
   0534 97 04         [ 4] 1218                     STA      *VIA_t1_cnt_lo 
                           1219 ; macro call ->                     DRAW_TO_OPEN  -24, 127 
   0536 CC 00 E8      [ 3] 1220                     LDD      #0+((-24)&0xff)                  ;3 A = 0; B = Y 
   0539 D7 01         [ 4] 1221                     STb      *VIA_port_a                  ; 6 
   053B 97 00         [ 4] 1222                     STa      *VIA_port_b                  ; 6 
   053D C6 7F         [ 2] 1223                     LDB      #127 
   053F 0C 00         [ 6] 1224                     INC      *VIA_port_b                  ;Disable mux 
   0541 D7 01         [ 4] 1225                     STB      *VIA_port_a                  ;Send X to A/D 
   0543 C6 3F         [ 2] 1226                     LDB      #0b00111111 
   0545 D7 0A         [ 4] 1227                     STB      *VIA_shift_reg 
   0547 97 05         [ 4] 1228                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1229 ; macro call ->                     CLOSE_SHORT  
   0549 C6 FE         [ 2] 1230                     ldb      #SHIFT_2 
                           1231  .globl LF33D111
   054B                    1232 LF33D111: 
   054B 96 04         [ 4] 1233                     LDA      *VIA_t1_cnt_lo 
   054D 81 0A         [ 2] 1234                     cmpa     #10 
   054F 22 FA         [ 3] 1235                     bhi      LF33D111 
   0551 D7 0A         [ 4] 1236                     stb      *VIA_shift_reg 
                           1237 ; macro call ->  WAIT12
   0553 1F 88         [ 6] 1238 	tfr a,a; wait 12 cycles
   0555 1F 88         [ 6] 1239      tfr a,a
                           1240 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0557 C6 CC         [ 2] 1241                     LDB      #0xCC                         ; 2 
   0559 D7 0C         [ 4] 1242                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1243 ; macro call ->  WAIT24
   055B 34 71         [ 9] 1244   pshs x,y,u,cc; wait 24 cycles
   055D 35 71         [ 9] 1245   puls x,y,u,cc
                           1246 ; long rays
   055F 86 CE         [ 2] 1247                     LDA      #0xCE                         ;Blank low, zero high? 
   0561 97 0C         [ 4] 1248                     STA      *VIA_cntl                    ; 
   0563 86 07         [ 2] 1249                     LDA      #7                           ; scalefactor 
   0565 97 04         [ 4] 1250                     STA      *VIA_t1_cnt_lo 
                           1251 ; macro call ->                     MOVE_TO_OPEN  127, -65 
                           1252 ; assuming SHIFT is zeri
   0567 CC 00 7F      [ 3] 1253                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   056A D7 01         [ 4] 1254                     STb      *VIA_port_a                  ; 6 
   056C 97 00         [ 4] 1255                     STa      *VIA_port_b                  ; 6 
   056E C6 BF         [ 2] 1256                     LDB      #-65 
   0570 0C 00         [ 6] 1257                     INC      *VIA_port_b                  ;Disable mux 
   0572 D7 01         [ 4] 1258                     STB      *VIA_port_a                  ;Send X to A/D 
   0574 97 05         [ 4] 1259                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1260 ; macro call ->                     WAIT4
   0576 12            [ 2] 1261  nop ; wait 4 cycles
   0577 12            [ 2] 1262  nop 
   0578 86 65         [ 2] 1263                     LDA      #101                         ; scalefactor 
   057A 97 04         [ 4] 1264                     STA      *VIA_t1_cnt_lo 
                           1265 ; macro call ->                     DRAW_TO_OPEN  127, -77 
   057C CC 00 7F      [ 3] 1266                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   057F D7 01         [ 4] 1267                     STb      *VIA_port_a                  ; 6 
   0581 97 00         [ 4] 1268                     STa      *VIA_port_b                  ; 6 
   0583 C6 B3         [ 2] 1269                     LDB      #-77 
   0585 0C 00         [ 6] 1270                     INC      *VIA_port_b                  ;Disable mux 
   0587 D7 01         [ 4] 1271                     STB      *VIA_port_a                  ;Send X to A/D 
   0589 C6 3F         [ 2] 1272                     LDB      #0b00111111 
   058B D7 0A         [ 4] 1273                     STB      *VIA_shift_reg 
   058D 97 05         [ 4] 1274                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1275 ; macro call ->                     CLOSE_SHORT  
   058F C6 FE         [ 2] 1276                     ldb      #SHIFT_2 
                           1277  .globl LF33D118
   0591                    1278 LF33D118: 
   0591 96 04         [ 4] 1279                     LDA      *VIA_t1_cnt_lo 
   0593 81 0A         [ 2] 1280                     cmpa     #10 
   0595 22 FA         [ 3] 1281                     bhi      LF33D118 
   0597 D7 0A         [ 4] 1282                     stb      *VIA_shift_reg 
                           1283 ; macro call ->                     WAIT12
   0599 1F 88         [ 6] 1284 	tfr a,a; wait 12 cycles
   059B 1F 88         [ 6] 1285      tfr a,a
                           1286 ; macro call ->                     _ZERO_VECTOR_BEAM  
   059D C6 CC         [ 2] 1287                     LDB      #0xCC                         ; 2 
   059F D7 0C         [ 4] 1288                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1289 ; macro call ->                     WAIT28
   05A1 34 77         [11] 1290  pshs y,x,d,u,cc; wait 28 cycles
   05A3 35 77         [11] 1291  puls y,x,d,u,cc
   05A5 86 CE         [ 2] 1292                     LDA      #0xCE                         ;Blank low, zero high? 
   05A7 97 0C         [ 4] 1293                     STA      *VIA_cntl                    ; 
   05A9 86 08         [ 2] 1294                     LDA      #8                           ; scalefactor 
   05AB 97 04         [ 4] 1295                     STA      *VIA_t1_cnt_lo 
                           1296 ; macro call ->                     MOVE_TO_OPEN  -127, +55 
                           1297 ; assuming SHIFT is zeri
   05AD CC 00 81      [ 3] 1298                     LDD      #0+((-127)&0xff)                  ;3 A = 0; B = Y 
   05B0 D7 01         [ 4] 1299                     STb      *VIA_port_a                  ; 6 
   05B2 97 00         [ 4] 1300                     STa      *VIA_port_b                  ; 6 
   05B4 C6 37         [ 2] 1301                     LDB      #+55 
   05B6 0C 00         [ 6] 1302                     INC      *VIA_port_b                  ;Disable mux 
   05B8 D7 01         [ 4] 1303                     STB      *VIA_port_a                  ;Send X to A/D 
   05BA 97 05         [ 4] 1304                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1305 ; macro call ->                     WAIT4 
   05BC 12            [ 2] 1306  nop ; wait 4 cycles
   05BD 12            [ 2] 1307  nop 
   05BE 86 65         [ 2] 1308                     LDA      #101                         ; scalefactor 
   05C0 97 04         [ 4] 1309                     STA      *VIA_t1_cnt_lo 
                           1310 ; macro call ->                     DRAW_TO_OPEN  -127, +78               ;75 
   05C2 CC 00 81      [ 3] 1311                     LDD      #0+((-127)&0xff)                  ;3 A = 0; B = Y 
   05C5 D7 01         [ 4] 1312                     STb      *VIA_port_a                  ; 6 
   05C7 97 00         [ 4] 1313                     STa      *VIA_port_b                  ; 6 
   05C9 C6 4E         [ 2] 1314                     LDB      #+78 
   05CB 0C 00         [ 6] 1315                     INC      *VIA_port_b                  ;Disable mux 
   05CD D7 01         [ 4] 1316                     STB      *VIA_port_a                  ;Send X to A/D 
   05CF C6 3F         [ 2] 1317                     LDB      #0b00111111 
   05D1 D7 0A         [ 4] 1318                     STB      *VIA_shift_reg 
   05D3 97 05         [ 4] 1319                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1320 ; macro call ->                     CLOSE_SHORT  
   05D5 C6 FE         [ 2] 1321                     ldb      #SHIFT_2 
                           1322  .globl LF33D125
   05D7                    1323 LF33D125: 
   05D7 96 04         [ 4] 1324                     LDA      *VIA_t1_cnt_lo 
   05D9 81 0A         [ 2] 1325                     cmpa     #10 
   05DB 22 FA         [ 3] 1326                     bhi      LF33D125 
   05DD D7 0A         [ 4] 1327                     stb      *VIA_shift_reg 
                           1328 ; macro call ->                     WAIT12
   05DF 1F 88         [ 6] 1329 	tfr a,a; wait 12 cycles
   05E1 1F 88         [ 6] 1330      tfr a,a
                           1331 ; macro call ->                     _ZERO_VECTOR_BEAM  
   05E3 C6 CC         [ 2] 1332                     LDB      #0xCC                         ; 2 
   05E5 D7 0C         [ 4] 1333                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1334 ; macro call ->                     WAIT28
   05E7 34 77         [11] 1335  pshs y,x,d,u,cc; wait 28 cycles
   05E9 35 77         [11] 1336  puls y,x,d,u,cc
   05EB 86 CE         [ 2] 1337                     LDA      #0xCE                         ;Blank low, zero high? 
   05ED 97 0C         [ 4] 1338                     STA      *VIA_cntl                    ; 
   05EF 86 07         [ 2] 1339                     LDA      #7                           ; scalefactor 
   05F1 97 04         [ 4] 1340                     STA      *VIA_t1_cnt_lo 
                           1341 ; macro call ->                     MOVE_TO_OPEN  127, 55 
                           1342 ; assuming SHIFT is zeri
   05F3 CC 00 7F      [ 3] 1343                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   05F6 D7 01         [ 4] 1344                     STb      *VIA_port_a                  ; 6 
   05F8 97 00         [ 4] 1345                     STa      *VIA_port_b                  ; 6 
   05FA C6 37         [ 2] 1346                     LDB      #55 
   05FC 0C 00         [ 6] 1347                     INC      *VIA_port_b                  ;Disable mux 
   05FE D7 01         [ 4] 1348                     STB      *VIA_port_a                  ;Send X to A/D 
   0600 97 05         [ 4] 1349                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1350 ; macro call ->                     WAIT4
   0602 12            [ 2] 1351  nop ; wait 4 cycles
   0603 12            [ 2] 1352  nop 
   0604 86 65         [ 2] 1353                     LDA      #101                         ; scalefactor 
   0606 97 04         [ 4] 1354                     STA      *VIA_t1_cnt_lo 
                           1355 ; macro call ->                     DRAW_TO_OPEN  127, 77 
   0608 CC 00 7F      [ 3] 1356                     LDD      #0+((127)&0xff)                  ;3 A = 0; B = Y 
   060B D7 01         [ 4] 1357                     STb      *VIA_port_a                  ; 6 
   060D 97 00         [ 4] 1358                     STa      *VIA_port_b                  ; 6 
   060F C6 4D         [ 2] 1359                     LDB      #77 
   0611 0C 00         [ 6] 1360                     INC      *VIA_port_b                  ;Disable mux 
   0613 D7 01         [ 4] 1361                     STB      *VIA_port_a                  ;Send X to A/D 
   0615 C6 3F         [ 2] 1362                     LDB      #0b00111111 
   0617 D7 0A         [ 4] 1363                     STB      *VIA_shift_reg 
   0619 97 05         [ 4] 1364                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1365 ; macro call ->                     CLOSE_SHORT  
   061B C6 FE         [ 2] 1366                     ldb      #SHIFT_2 
                           1367  .globl LF33D132
   061D                    1368 LF33D132: 
   061D 96 04         [ 4] 1369                     LDA      *VIA_t1_cnt_lo 
   061F 81 0A         [ 2] 1370                     cmpa     #10 
   0621 22 FA         [ 3] 1371                     bhi      LF33D132 
   0623 D7 0A         [ 4] 1372                     stb      *VIA_shift_reg 
                           1373 ; macro call ->                     WAIT12
   0625 1F 88         [ 6] 1374 	tfr a,a; wait 12 cycles
   0627 1F 88         [ 6] 1375      tfr a,a
                           1376 ; macro call ->                     _ZERO_VECTOR_BEAM  
   0629 C6 CC         [ 2] 1377                     LDB      #0xCC                         ; 2 
   062B D7 0C         [ 4] 1378                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1379 ; macro call ->                     WAIT28
   062D 34 77         [11] 1380  pshs y,x,d,u,cc; wait 28 cycles
   062F 35 77         [11] 1381  puls y,x,d,u,cc
   0631 86 CE         [ 2] 1382                     LDA      #0xCE                         ;Blank low, zero high? 
   0633 97 0C         [ 4] 1383                     STA      *VIA_cntl                    ; 
   0635 86 08         [ 2] 1384                     LDA      #8                           ; scalefactor 
   0637 97 04         [ 4] 1385                     STA      *VIA_t1_cnt_lo 
                           1386 ; macro call ->                     MOVE_TO_OPEN  -127, -55 
                           1387 ; assuming SHIFT is zeri
   0639 CC 00 81      [ 3] 1388                     LDD      #0+((-127)&0xff)                  ;3 A = 0; B = Y 
   063C D7 01         [ 4] 1389                     STb      *VIA_port_a                  ; 6 
   063E 97 00         [ 4] 1390                     STa      *VIA_port_b                  ; 6 
   0640 C6 C9         [ 2] 1391                     LDB      #-55 
   0642 0C 00         [ 6] 1392                     INC      *VIA_port_b                  ;Disable mux 
   0644 D7 01         [ 4] 1393                     STB      *VIA_port_a                  ;Send X to A/D 
   0646 97 05         [ 4] 1394                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1395 ; macro call ->                     WAIT4
   0648 12            [ 2] 1396  nop ; wait 4 cycles
   0649 12            [ 2] 1397  nop 
   064A 86 65         [ 2] 1398                     LDA      #101                         ; scalefactor 
   064C 97 04         [ 4] 1399                     STA      *VIA_t1_cnt_lo 
                           1400 ; macro call ->                     DRAW_TO_OPEN  -127, -75 
   064E CC 00 81      [ 3] 1401                     LDD      #0+((-127)&0xff)                  ;3 A = 0; B = Y 
   0651 D7 01         [ 4] 1402                     STb      *VIA_port_a                  ; 6 
   0653 97 00         [ 4] 1403                     STa      *VIA_port_b                  ; 6 
   0655 C6 B5         [ 2] 1404                     LDB      #-75 
   0657 0C 00         [ 6] 1405                     INC      *VIA_port_b                  ;Disable mux 
   0659 D7 01         [ 4] 1406                     STB      *VIA_port_a                  ;Send X to A/D 
   065B C6 3F         [ 2] 1407                     LDB      #0b00111111 
   065D D7 0A         [ 4] 1408                     STB      *VIA_shift_reg 
   065F 97 05         [ 4] 1409                     STA      *VIA_t1_cnt_hi               ;enable timer 1 
                           1410 ; macro call ->                     CLOSE_SHORT  
   0661 C6 FE         [ 2] 1411                     ldb      #SHIFT_2 
                           1412  .globl LF33D139
   0663                    1413 LF33D139: 
   0663 96 04         [ 4] 1414                     LDA      *VIA_t1_cnt_lo 
   0665 81 0A         [ 2] 1415                     cmpa     #10 
   0667 22 FA         [ 3] 1416                     bhi      LF33D139 
   0669 D7 0A         [ 4] 1417                     stb      *VIA_shift_reg 
                           1418 ; macro call ->                     WAIT12
   066B 1F 88         [ 6] 1419 	tfr a,a; wait 12 cycles
   066D 1F 88         [ 6] 1420      tfr a,a
                           1421 ; macro call ->                     _ZERO_VECTOR_BEAM  
   066F C6 CC         [ 2] 1422                     LDB      #0xCC                         ; 2 
   0671 D7 0C         [ 4] 1423                     STB      *VIA_cntl                    ; 6 /BLANK low and /ZERO low 
                           1424 ; macro call ->                     WAIT24
   0673 34 71         [ 9] 1425   pshs x,y,u,cc; wait 24 cycles
   0675 35 71         [ 9] 1426   puls x,y,u,cc
   0677 4F            [ 2] 1427                     clra     
   0678 97 0A         [ 4] 1428                     sta      *VIA_shift_reg 
   067A 39            [ 5] 1429                     rts      
ASxxxx Assembler V05.00  (Motorola 6809), page 1.
Hexidecimal [16-Bits]

Symbol Table

    .__.$$$.       =   2710 L   |     .__.ABS.       =   0000 G
    .__.CPU.       =   0000 L   |     .__.H$L.       =   0001 L
  2 A$DrawWebToC.p     03E0 GR  |   2 A$DrawWebToC.p     03E2 GR
  2 A$DrawWebToC.p     03E4 GR  |   2 A$DrawWebToC.p     03E6 GR
  2 A$DrawWebToC.p     03E9 GR  |   2 A$DrawWebToC.p     03EB GR
  2 A$DrawWebToC.p     03ED GR  |   2 A$DrawWebToC.p     03EF GR
  2 A$DrawWebToC.p     03F1 GR  |   2 A$DrawWebToC.p     03F3 GR
  2 A$DrawWebToC.p     03F5 GR  |   2 A$DrawWebToC.p     03F7 GR
  2 A$DrawWebToC.p     03F9 GR  |   2 A$DrawWebToC.p     03FB GR
  2 A$DrawWebToC.p     03FD GR  |   2 A$DrawWebToC.p     03FF GR
  2 A$DrawWebToC.p     0401 GR  |   2 A$DrawWebToC.p     0403 GR
  2 A$DrawWebToC.p     0406 GR  |   2 A$DrawWebToC.p     0408 GR
  2 A$DrawWebToC.p     040A GR  |   2 A$DrawWebToC.p     040C GR
  2 A$DrawWebToC.p     040E GR  |   2 A$DrawWebToC.p     0410 GR
  2 A$DrawWebToC.p     0412 GR  |   2 A$DrawWebToC.p     0414 GR
  2 A$DrawWebToC.p     0416 GR  |   2 A$DrawWebToC.p     0418 GR
  2 A$DrawWebToC.p     041A GR  |   2 A$DrawWebToC.p     041C GR
  2 A$DrawWebToC.p     041E GR  |   2 A$DrawWebToC.p     0420 GR
  2 A$DrawWebToC.p     0423 GR  |   2 A$DrawWebToC.p     0425 GR
  2 A$DrawWebToC.p     0427 GR  |   2 A$DrawWebToC.p     0429 GR
  2 A$DrawWebToC.p     042B GR  |   2 A$DrawWebToC.p     042D GR
  2 A$DrawWebToC.p     042F GR  |   2 A$DrawWebToC.p     0431 GR
  2 A$DrawWebToC.p     0433 GR  |   2 A$DrawWebToC.p     0435 GR
  2 A$DrawWebToC.p     0437 GR  |   2 A$DrawWebToC.p     0439 GR
  2 A$DrawWebToC.p     043B GR  |   2 A$DrawWebToC.p     043D GR
  2 A$DrawWebToC.p     043F GR  |   2 A$DrawWebToC.p     0441 GR
  2 A$DrawWebToC.p     0443 GR  |   2 A$DrawWebToC.p     0445 GR
  2 A$DrawWebToC.p     0447 GR  |   2 A$DrawWebToC.p     0449 GR
  2 A$DrawWebToC.p     044B GR  |   2 A$DrawWebToC.p     044D GR
  2 A$DrawWebToC.p     044F GR  |   2 A$DrawWebToC.p     0451 GR
  2 A$DrawWebToC.p     0454 GR  |   2 A$DrawWebToC.p     0456 GR
  2 A$DrawWebToC.p     0458 GR  |   2 A$DrawWebToC.p     045A GR
  2 A$DrawWebToC.p     045C GR  |   2 A$DrawWebToC.p     045E GR
  2 A$DrawWebToC.p     0460 GR  |   2 A$DrawWebToC.p     0461 GR
  2 A$DrawWebToC.p     0463 GR  |   2 A$DrawWebToC.p     0465 GR
  2 A$DrawWebToC.p     0468 GR  |   2 A$DrawWebToC.p     046A GR
  2 A$DrawWebToC.p     046C GR  |   2 A$DrawWebToC.p     046E GR
  2 A$DrawWebToC.p     0470 GR  |   2 A$DrawWebToC.p     0472 GR
  2 A$DrawWebToC.p     0474 GR  |   2 A$DrawWebToC.p     0476 GR
  2 A$DrawWebToC.p     0478 GR  |   2 A$DrawWebToC.p     047A GR
  2 A$DrawWebToC.p     047C GR  |   2 A$DrawWebToC.p     047E GR
  2 A$DrawWebToC.p     0480 GR  |   2 A$DrawWebToC.p     0482 GR
  2 A$DrawWebToC.p     0484 GR  |   2 A$DrawWebToC.p     0486 GR
  2 A$DrawWebToC.p     0488 GR  |   2 A$DrawWebToC.p     048A GR
  2 A$DrawWebToC.p     048C GR  |   2 A$DrawWebToC.p     048E GR
  2 A$DrawWebToC.p     0490 GR  |   2 A$DrawWebToC.p     0492 GR
  2 A$DrawWebToC.p     0494 GR  |   2 A$DrawWebToC.p     0496 GR
  2 A$DrawWebToC.p     0499 GR  |   2 A$DrawWebToC.p     049B GR
  2 A$DrawWebToC.p     049D GR  |   2 A$DrawWebToC.p     049F GR
  2 A$DrawWebToC.p     04A1 GR  |   2 A$DrawWebToC.p     04A3 GR
  2 A$DrawWebToC.p     04A5 GR  |   2 A$DrawWebToC.p     04A6 GR
  2 A$DrawWebToC.p     04A7 GR  |   2 A$DrawWebToC.p     04A9 GR
  2 A$DrawWebToC.p     04AB GR  |   2 A$DrawWebToC.p     04AE GR
  2 A$DrawWebToC.p     04B0 GR  |   2 A$DrawWebToC.p     04B2 GR
  2 A$DrawWebToC.p     04B4 GR  |   2 A$DrawWebToC.p     04B6 GR
  2 A$DrawWebToC.p     04B8 GR  |   2 A$DrawWebToC.p     04BA GR
  2 A$DrawWebToC.p     04BC GR  |   2 A$DrawWebToC.p     04BE GR
  2 A$DrawWebToC.p     04C0 GR  |   2 A$DrawWebToC.p     04C2 GR
  2 A$DrawWebToC.p     04C4 GR  |   2 A$DrawWebToC.p     04C6 GR
  2 A$DrawWebToC.p     04C8 GR  |   2 A$DrawWebToC.p     04CA GR
  2 A$DrawWebToC.p     04CC GR  |   2 A$DrawWebToC.p     04CE GR
  2 A$DrawWebToC.p     04D0 GR  |   2 A$DrawWebToC.p     04D2 GR
  2 A$DrawWebToC.p     04D4 GR  |   2 A$DrawWebToC.p     04D6 GR
  2 A$DrawWebToC.p     04D8 GR  |   2 A$DrawWebToC.p     04DA GR
  2 A$DrawWebToC.p     04DC GR  |   2 A$DrawWebToC.p     04DF GR
  2 A$DrawWebToC.p     04E1 GR  |   2 A$DrawWebToC.p     04E3 GR
  2 A$DrawWebToC.p     04E5 GR  |   2 A$DrawWebToC.p     04E7 GR
  2 A$DrawWebToC.p     04E9 GR  |   2 A$DrawWebToC.p     04EB GR
  2 A$DrawWebToC.p     04EC GR  |   2 A$DrawWebToC.p     04EE GR
  2 A$DrawWebToC.p     04F0 GR  |   2 A$DrawWebToC.p     04F3 GR
  2 A$DrawWebToC.p     04F5 GR  |   2 A$DrawWebToC.p     04F7 GR
  2 A$DrawWebToC.p     04F9 GR  |   2 A$DrawWebToC.p     04FB GR
  2 A$DrawWebToC.p     04FD GR  |   2 A$DrawWebToC.p     04FF GR
  2 A$DrawWebToC.p     0501 GR  |   2 A$DrawWebToC.p     0503 GR
  2 A$DrawWebToC.p     0505 GR  |   2 A$DrawWebToC.p     0507 GR
  2 A$DrawWebToC.p     0509 GR  |   2 A$DrawWebToC.p     050B GR
  2 A$DrawWebToC.p     050D GR  |   2 A$DrawWebToC.p     050F GR
  2 A$DrawWebToC.p     0511 GR  |   2 A$DrawWebToC.p     0513 GR
  2 A$DrawWebToC.p     0515 GR  |   2 A$DrawWebToC.p     0517 GR
  2 A$DrawWebToC.p     0519 GR  |   2 A$DrawWebToC.p     051B GR
  2 A$DrawWebToC.p     051D GR  |   2 A$DrawWebToC.p     051F GR
  2 A$DrawWebToC.p     0521 GR  |   2 A$DrawWebToC.p     0524 GR
  2 A$DrawWebToC.p     0526 GR  |   2 A$DrawWebToC.p     0528 GR
  2 A$DrawWebToC.p     052A GR  |   2 A$DrawWebToC.p     052C GR
  2 A$DrawWebToC.p     052E GR  |   2 A$DrawWebToC.p     0530 GR
  2 A$DrawWebToC.p     0531 GR  |   2 A$DrawWebToC.p     0532 GR
  2 A$DrawWebToC.p     0534 GR  |   2 A$DrawWebToC.p     0536 GR
  2 A$DrawWebToC.p     0539 GR  |   2 A$DrawWebToC.p     053B GR
  2 A$DrawWebToC.p     053D GR  |   2 A$DrawWebToC.p     053F GR
  2 A$DrawWebToC.p     0541 GR  |   2 A$DrawWebToC.p     0543 GR
  2 A$DrawWebToC.p     0545 GR  |   2 A$DrawWebToC.p     0547 GR
  2 A$DrawWebToC.p     0549 GR  |   2 A$DrawWebToC.p     054B GR
  2 A$DrawWebToC.p     054D GR  |   2 A$DrawWebToC.p     054F GR
  2 A$DrawWebToC.p     0551 GR  |   2 A$DrawWebToC.p     0553 GR
  2 A$DrawWebToC.p     0555 GR  |   2 A$DrawWebToC.p     0557 GR
  2 A$DrawWebToC.p     0559 GR  |   2 A$DrawWebToC.p     055B GR
  2 A$DrawWebToC.p     055D GR  |   2 A$DrawWebToC.p     055F GR
  2 A$DrawWebToC.p     0561 GR  |   2 A$DrawWebToC.p     0563 GR
  2 A$DrawWebToC.p     0565 GR  |   2 A$DrawWebToC.p     0567 GR
  2 A$DrawWebToC.p     056A GR  |   2 A$DrawWebToC.p     056C GR
  2 A$DrawWebToC.p     056E GR  |   2 A$DrawWebToC.p     0570 GR
  2 A$DrawWebToC.p     0572 GR  |   2 A$DrawWebToC.p     0574 GR
  2 A$DrawWebToC.p     0576 GR  |   2 A$DrawWebToC.p     0577 GR
  2 A$DrawWebToC.p     0578 GR  |   2 A$DrawWebToC.p     057A GR
  2 A$DrawWebToC.p     057C GR  |   2 A$DrawWebToC.p     057F GR
  2 A$DrawWebToC.p     0581 GR  |   2 A$DrawWebToC.p     0583 GR
  2 A$DrawWebToC.p     0585 GR  |   2 A$DrawWebToC.p     0587 GR
  2 A$DrawWebToC.p     0589 GR  |   2 A$DrawWebToC.p     058B GR
  2 A$DrawWebToC.p     058D GR  |   2 A$DrawWebToC.p     058F GR
  2 A$DrawWebToC.p     0591 GR  |   2 A$DrawWebToC.p     0593 GR
  2 A$DrawWebToC.p     0595 GR  |   2 A$DrawWebToC.p     0597 GR
  2 A$DrawWebToC.p     0599 GR  |   2 A$DrawWebToC.p     059B GR
  2 A$DrawWebToC.p     059D GR  |   2 A$DrawWebToC.p     059F GR
  2 A$DrawWebToC.p     05A1 GR  |   2 A$DrawWebToC.p     05A3 GR
  2 A$DrawWebToC.p     05A5 GR  |   2 A$DrawWebToC.p     05A7 GR
  2 A$DrawWebToC.p     05A9 GR  |   2 A$DrawWebToC.p     05AB GR
  2 A$DrawWebToC.p     05AD GR  |   2 A$DrawWebToC.p     05B0 GR
  2 A$DrawWebToC.p     05B2 GR  |   2 A$DrawWebToC.p     05B4 GR
  2 A$DrawWebToC.p     05B6 GR  |   2 A$DrawWebToC.p     05B8 GR
  2 A$DrawWebToC.p     05BA GR  |   2 A$DrawWebToC.p     05BC GR
  2 A$DrawWebToC.p     05BD GR  |   2 A$DrawWebToC.p     05BE GR
  2 A$DrawWebToC.p     05C0 GR  |   2 A$DrawWebToC.p     05C2 GR
  2 A$DrawWebToC.p     05C5 GR  |   2 A$DrawWebToC.p     05C7 GR
  2 A$DrawWebToC.p     05C9 GR  |   2 A$DrawWebToC.p     05CB GR
  2 A$DrawWebToC.p     05CD GR  |   2 A$DrawWebToC.p     05CF GR
  2 A$DrawWebToC.p     05D1 GR  |   2 A$DrawWebToC.p     05D3 GR
  2 A$DrawWebToC.p     05D5 GR  |   2 A$DrawWebToC.p     05D7 GR
  2 A$DrawWebToC.p     05D9 GR  |   2 A$DrawWebToC.p     05DB GR
  2 A$DrawWebToC.p     05DD GR  |   2 A$DrawWebToC.p     05DF GR
  2 A$DrawWebToC.p     05E1 GR  |   2 A$DrawWebToC.p     05E3 GR
  2 A$DrawWebToC.p     05E5 GR  |   2 A$DrawWebToC.p     05E7 GR
  2 A$DrawWebToC.p     05E9 GR  |   2 A$DrawWebToC.p     05EB GR
  2 A$DrawWebToC.p     05ED GR  |   2 A$DrawWebToC.p     05EF GR
  2 A$DrawWebToC.p     05F1 GR  |   2 A$DrawWebToC.p     05F3 GR
  2 A$DrawWebToC.p     05F6 GR  |   2 A$DrawWebToC.p     05F8 GR
  2 A$DrawWebToC.p     05FA GR  |   2 A$DrawWebToC.p     05FC GR
  2 A$DrawWebToC.p     05FE GR  |   2 A$DrawWebToC.p     0600 GR
  2 A$DrawWebToC.p     0602 GR  |   2 A$DrawWebToC.p     0603 GR
  2 A$DrawWebToC.p     0604 GR  |   2 A$DrawWebToC.p     0606 GR
  2 A$DrawWebToC.p     0608 GR  |   2 A$DrawWebToC.p     060B GR
  2 A$DrawWebToC.p     060D GR  |   2 A$DrawWebToC.p     060F GR
  2 A$DrawWebToC.p     0611 GR  |   2 A$DrawWebToC.p     0613 GR
  2 A$DrawWebToC.p     0615 GR  |   2 A$DrawWebToC.p     0617 GR
  2 A$DrawWebToC.p     0619 GR  |   2 A$DrawWebToC.p     061B GR
  2 A$DrawWebToC.p     061D GR  |   2 A$DrawWebToC.p     061F GR
  2 A$DrawWebToC.p     0621 GR  |   2 A$DrawWebToC.p     0623 GR
  2 A$DrawWebToC.p     0625 GR  |   2 A$DrawWebToC.p     0627 GR
  2 A$DrawWebToC.p     0629 GR  |   2 A$DrawWebToC.p     062B GR
  2 A$DrawWebToC.p     062D GR  |   2 A$DrawWebToC.p     062F GR
  2 A$DrawWebToC.p     0631 GR  |   2 A$DrawWebToC.p     0633 GR
  2 A$DrawWebToC.p     0635 GR  |   2 A$DrawWebToC.p     0637 GR
  2 A$DrawWebToC.p     0639 GR  |   2 A$DrawWebToC.p     063C GR
  2 A$DrawWebToC.p     063E GR  |   2 A$DrawWebToC.p     0640 GR
  2 A$DrawWebToC.p     0642 GR  |   2 A$DrawWebToC.p     0644 GR
  2 A$DrawWebToC.p     0646 GR  |   2 A$DrawWebToC.p     0648 GR
  2 A$DrawWebToC.p     0649 GR  |   2 A$DrawWebToC.p     064A GR
  2 A$DrawWebToC.p     064C GR  |   2 A$DrawWebToC.p     064E GR
  2 A$DrawWebToC.p     0651 GR  |   2 A$DrawWebToC.p     0653 GR
  2 A$DrawWebToC.p     0655 GR  |   2 A$DrawWebToC.p     0657 GR
  2 A$DrawWebToC.p     0659 GR  |   2 A$DrawWebToC.p     065B GR
  2 A$DrawWebToC.p     065D GR  |   2 A$DrawWebToC.p     065F GR
  2 A$DrawWebToC.p     0661 GR  |   2 A$DrawWebToC.p     0663 GR
  2 A$DrawWebToC.p     0665 GR  |   2 A$DrawWebToC.p     0667 GR
  2 A$DrawWebToC.p     0669 GR  |   2 A$DrawWebToC.p     066B GR
  2 A$DrawWebToC.p     066D GR  |   2 A$DrawWebToC.p     066F GR
  2 A$DrawWebToC.p     0671 GR  |   2 A$DrawWebToC.p     0673 GR
  2 A$DrawWebToC.p     0675 GR  |   2 A$DrawWebToC.p     0677 GR
  2 A$DrawWebToC.p     0678 GR  |   2 A$DrawWebToC.p     067A GR
  2 A$DrawWebToC.p     0000 GR  |   2 A$DrawWebToC.p     0002 GR
  2 A$DrawWebToC.p     0004 GR  |   2 A$DrawWebToC.p     0006 GR
  2 A$DrawWebToC.p     0008 GR  |   2 A$DrawWebToC.p     000A GR
  2 A$DrawWebToC.p     000C GR  |   2 A$DrawWebToC.p     000E GR
  2 A$DrawWebToC.p     0010 GR  |   2 A$DrawWebToC.p     0013 GR
  2 A$DrawWebToC.p     0015 GR  |   2 A$DrawWebToC.p     0017 GR
  2 A$DrawWebToC.p     0019 GR  |   2 A$DrawWebToC.p     001B GR
  2 A$DrawWebToC.p     001D GR  |   2 A$DrawWebToC.p     001F GR
  2 A$DrawWebToC.p     0021 GR  |   2 A$DrawWebToC.p     0023 GR
  2 A$DrawWebToC.p     0025 GR  |   2 A$DrawWebToC.p     0027 GR
  2 A$DrawWebToC.p     0029 GR  |   2 A$DrawWebToC.p     002C GR
  2 A$DrawWebToC.p     002E GR  |   2 A$DrawWebToC.p     0030 GR
  2 A$DrawWebToC.p     0032 GR  |   2 A$DrawWebToC.p     0034 GR
  2 A$DrawWebToC.p     0036 GR  |   2 A$DrawWebToC.p     0038 GR
  2 A$DrawWebToC.p     003A GR  |   2 A$DrawWebToC.p     003C GR
  2 A$DrawWebToC.p     003E GR  |   2 A$DrawWebToC.p     0040 GR
  2 A$DrawWebToC.p     0042 GR  |   2 A$DrawWebToC.p     0044 GR
  2 A$DrawWebToC.p     0046 GR  |   2 A$DrawWebToC.p     0049 GR
  2 A$DrawWebToC.p     004B GR  |   2 A$DrawWebToC.p     004D GR
  2 A$DrawWebToC.p     004F GR  |   2 A$DrawWebToC.p     0051 GR
  2 A$DrawWebToC.p     0053 GR  |   2 A$DrawWebToC.p     0055 GR
  2 A$DrawWebToC.p     0057 GR  |   2 A$DrawWebToC.p     0059 GR
  2 A$DrawWebToC.p     005B GR  |   2 A$DrawWebToC.p     005D GR
  2 A$DrawWebToC.p     005F GR  |   2 A$DrawWebToC.p     0061 GR
  2 A$DrawWebToC.p     0063 GR  |   2 A$DrawWebToC.p     0066 GR
  2 A$DrawWebToC.p     0068 GR  |   2 A$DrawWebToC.p     006A GR
  2 A$DrawWebToC.p     006C GR  |   2 A$DrawWebToC.p     006E GR
  2 A$DrawWebToC.p     0070 GR  |   2 A$DrawWebToC.p     0072 GR
  2 A$DrawWebToC.p     0074 GR  |   2 A$DrawWebToC.p     0076 GR
  2 A$DrawWebToC.p     0078 GR  |   2 A$DrawWebToC.p     007A GR
  2 A$DrawWebToC.p     007C GR  |   2 A$DrawWebToC.p     007E GR
  2 A$DrawWebToC.p     0080 GR  |   2 A$DrawWebToC.p     0083 GR
  2 A$DrawWebToC.p     0085 GR  |   2 A$DrawWebToC.p     0087 GR
  2 A$DrawWebToC.p     0089 GR  |   2 A$DrawWebToC.p     008B GR
  2 A$DrawWebToC.p     008D GR  |   2 A$DrawWebToC.p     008F GR
  2 A$DrawWebToC.p     0091 GR  |   2 A$DrawWebToC.p     0093 GR
  2 A$DrawWebToC.p     0095 GR  |   2 A$DrawWebToC.p     0097 GR
  2 A$DrawWebToC.p     0099 GR  |   2 A$DrawWebToC.p     009B GR
  2 A$DrawWebToC.p     009E GR  |   2 A$DrawWebToC.p     00A0 GR
  2 A$DrawWebToC.p     00A2 GR  |   2 A$DrawWebToC.p     00A4 GR
  2 A$DrawWebToC.p     00A6 GR  |   2 A$DrawWebToC.p     00A8 GR
  2 A$DrawWebToC.p     00AA GR  |   2 A$DrawWebToC.p     00AC GR
  2 A$DrawWebToC.p     00AE GR  |   2 A$DrawWebToC.p     00B0 GR
  2 A$DrawWebToC.p     00B2 GR  |   2 A$DrawWebToC.p     00B4 GR
  2 A$DrawWebToC.p     00B6 GR  |   2 A$DrawWebToC.p     00B8 GR
  2 A$DrawWebToC.p     00BB GR  |   2 A$DrawWebToC.p     00BD GR
  2 A$DrawWebToC.p     00BF GR  |   2 A$DrawWebToC.p     00C1 GR
  2 A$DrawWebToC.p     00C3 GR  |   2 A$DrawWebToC.p     00C5 GR
  2 A$DrawWebToC.p     00C7 GR  |   2 A$DrawWebToC.p     00C9 GR
  2 A$DrawWebToC.p     00CB GR  |   2 A$DrawWebToC.p     00CD GR
  2 A$DrawWebToC.p     00CF GR  |   2 A$DrawWebToC.p     00D1 GR
  2 A$DrawWebToC.p     00D3 GR  |   2 A$DrawWebToC.p     00D5 GR
  2 A$DrawWebToC.p     00D8 GR  |   2 A$DrawWebToC.p     00DA GR
  2 A$DrawWebToC.p     00DC GR  |   2 A$DrawWebToC.p     00DE GR
  2 A$DrawWebToC.p     00E0 GR  |   2 A$DrawWebToC.p     00E2 GR
  2 A$DrawWebToC.p     00E4 GR  |   2 A$DrawWebToC.p     00E6 GR
  2 A$DrawWebToC.p     00E8 GR  |   2 A$DrawWebToC.p     00EA GR
  2 A$DrawWebToC.p     00EC GR  |   2 A$DrawWebToC.p     00EE GR
  2 A$DrawWebToC.p     00F0 GR  |   2 A$DrawWebToC.p     00F2 GR
  2 A$DrawWebToC.p     00F5 GR  |   2 A$DrawWebToC.p     00F7 GR
  2 A$DrawWebToC.p     00F9 GR  |   2 A$DrawWebToC.p     00FB GR
  2 A$DrawWebToC.p     00FD GR  |   2 A$DrawWebToC.p     00FF GR
  2 A$DrawWebToC.p     0101 GR  |   2 A$DrawWebToC.p     0103 GR
  2 A$DrawWebToC.p     0105 GR  |   2 A$DrawWebToC.p     0107 GR
  2 A$DrawWebToC.p     0109 GR  |   2 A$DrawWebToC.p     010B GR
  2 A$DrawWebToC.p     010D GR  |   2 A$DrawWebToC.p     010F GR
  2 A$DrawWebToC.p     0111 GR  |   2 A$DrawWebToC.p     0113 GR
  2 A$DrawWebToC.p     0115 GR  |   2 A$DrawWebToC.p     0116 GR
  2 A$DrawWebToC.p     0118 GR  |   2 A$DrawWebToC.p     011A GR
  2 A$DrawWebToC.p     011C GR  |   2 A$DrawWebToC.p     011E GR
  2 A$DrawWebToC.p     0121 GR  |   2 A$DrawWebToC.p     0123 GR
  2 A$DrawWebToC.p     0125 GR  |   2 A$DrawWebToC.p     0127 GR
  2 A$DrawWebToC.p     0129 GR  |   2 A$DrawWebToC.p     012B GR
  2 A$DrawWebToC.p     012D GR  |   2 A$DrawWebToC.p     012F GR
  2 A$DrawWebToC.p     0131 GR  |   2 A$DrawWebToC.p     0133 GR
  2 A$DrawWebToC.p     0135 GR  |   2 A$DrawWebToC.p     0137 GR
  2 A$DrawWebToC.p     013A GR  |   2 A$DrawWebToC.p     013C GR
  2 A$DrawWebToC.p     013E GR  |   2 A$DrawWebToC.p     0140 GR
  2 A$DrawWebToC.p     0142 GR  |   2 A$DrawWebToC.p     0144 GR
  2 A$DrawWebToC.p     0146 GR  |   2 A$DrawWebToC.p     0148 GR
  2 A$DrawWebToC.p     014A GR  |   2 A$DrawWebToC.p     014C GR
  2 A$DrawWebToC.p     014E GR  |   2 A$DrawWebToC.p     0150 GR
  2 A$DrawWebToC.p     0152 GR  |   2 A$DrawWebToC.p     0154 GR
  2 A$DrawWebToC.p     0157 GR  |   2 A$DrawWebToC.p     0159 GR
  2 A$DrawWebToC.p     015B GR  |   2 A$DrawWebToC.p     015D GR
  2 A$DrawWebToC.p     015F GR  |   2 A$DrawWebToC.p     0161 GR
  2 A$DrawWebToC.p     0163 GR  |   2 A$DrawWebToC.p     0165 GR
  2 A$DrawWebToC.p     0167 GR  |   2 A$DrawWebToC.p     0169 GR
  2 A$DrawWebToC.p     016B GR  |   2 A$DrawWebToC.p     016D GR
  2 A$DrawWebToC.p     016F GR  |   2 A$DrawWebToC.p     0171 GR
  2 A$DrawWebToC.p     0174 GR  |   2 A$DrawWebToC.p     0176 GR
  2 A$DrawWebToC.p     0178 GR  |   2 A$DrawWebToC.p     017A GR
  2 A$DrawWebToC.p     017C GR  |   2 A$DrawWebToC.p     017E GR
  2 A$DrawWebToC.p     0180 GR  |   2 A$DrawWebToC.p     0182 GR
  2 A$DrawWebToC.p     0184 GR  |   2 A$DrawWebToC.p     0186 GR
  2 A$DrawWebToC.p     0188 GR  |   2 A$DrawWebToC.p     018A GR
  2 A$DrawWebToC.p     018C GR  |   2 A$DrawWebToC.p     018F GR
  2 A$DrawWebToC.p     0191 GR  |   2 A$DrawWebToC.p     0193 GR
  2 A$DrawWebToC.p     0195 GR  |   2 A$DrawWebToC.p     0197 GR
  2 A$DrawWebToC.p     0199 GR  |   2 A$DrawWebToC.p     019B GR
  2 A$DrawWebToC.p     019D GR  |   2 A$DrawWebToC.p     019F GR
  2 A$DrawWebToC.p     01A1 GR  |   2 A$DrawWebToC.p     01A3 GR
  2 A$DrawWebToC.p     01A5 GR  |   2 A$DrawWebToC.p     01A7 GR
  2 A$DrawWebToC.p     01A9 GR  |   2 A$DrawWebToC.p     01AC GR
  2 A$DrawWebToC.p     01AE GR  |   2 A$DrawWebToC.p     01B0 GR
  2 A$DrawWebToC.p     01B2 GR  |   2 A$DrawWebToC.p     01B4 GR
  2 A$DrawWebToC.p     01B6 GR  |   2 A$DrawWebToC.p     01B8 GR
  2 A$DrawWebToC.p     01BA GR  |   2 A$DrawWebToC.p     01BC GR
  2 A$DrawWebToC.p     01BE GR  |   2 A$DrawWebToC.p     01C0 GR
  2 A$DrawWebToC.p     01C2 GR  |   2 A$DrawWebToC.p     01C4 GR
  2 A$DrawWebToC.p     01C6 GR  |   2 A$DrawWebToC.p     01C9 GR
  2 A$DrawWebToC.p     01CB GR  |   2 A$DrawWebToC.p     01CD GR
  2 A$DrawWebToC.p     01CF GR  |   2 A$DrawWebToC.p     01D1 GR
  2 A$DrawWebToC.p     01D3 GR  |   2 A$DrawWebToC.p     01D5 GR
  2 A$DrawWebToC.p     01D7 GR  |   2 A$DrawWebToC.p     01D9 GR
  2 A$DrawWebToC.p     01DB GR  |   2 A$DrawWebToC.p     01DD GR
  2 A$DrawWebToC.p     01DF GR  |   2 A$DrawWebToC.p     01E1 GR
  2 A$DrawWebToC.p     01E3 GR  |   2 A$DrawWebToC.p     01E6 GR
  2 A$DrawWebToC.p     01E8 GR  |   2 A$DrawWebToC.p     01EA GR
  2 A$DrawWebToC.p     01EC GR  |   2 A$DrawWebToC.p     01EE GR
  2 A$DrawWebToC.p     01F0 GR  |   2 A$DrawWebToC.p     01F2 GR
  2 A$DrawWebToC.p     01F4 GR  |   2 A$DrawWebToC.p     01F6 GR
  2 A$DrawWebToC.p     01F8 GR  |   2 A$DrawWebToC.p     01FA GR
  2 A$DrawWebToC.p     01FC GR  |   2 A$DrawWebToC.p     01FE GR
  2 A$DrawWebToC.p     0201 GR  |   2 A$DrawWebToC.p     0203 GR
  2 A$DrawWebToC.p     0205 GR  |   2 A$DrawWebToC.p     0207 GR
  2 A$DrawWebToC.p     0209 GR  |   2 A$DrawWebToC.p     020B GR
  2 A$DrawWebToC.p     020D GR  |   2 A$DrawWebToC.p     020F GR
  2 A$DrawWebToC.p     0211 GR  |   2 A$DrawWebToC.p     0213 GR
  2 A$DrawWebToC.p     0215 GR  |   2 A$DrawWebToC.p     0217 GR
  2 A$DrawWebToC.p     0219 GR  |   2 A$DrawWebToC.p     021B GR
  2 A$DrawWebToC.p     021D GR  |   2 A$DrawWebToC.p     021F GR
  2 A$DrawWebToC.p     0221 GR  |   2 A$DrawWebToC.p     0223 GR
  2 A$DrawWebToC.p     0225 GR  |   2 A$DrawWebToC.p     0227 GR
  2 A$DrawWebToC.p     0229 GR  |   2 A$DrawWebToC.p     022B GR
  2 A$DrawWebToC.p     022D GR  |   2 A$DrawWebToC.p     022F GR
  2 A$DrawWebToC.p     0232 GR  |   2 A$DrawWebToC.p     0234 GR
  2 A$DrawWebToC.p     0236 GR  |   2 A$DrawWebToC.p     0238 GR
  2 A$DrawWebToC.p     023A GR  |   2 A$DrawWebToC.p     023C GR
  2 A$DrawWebToC.p     023E GR  |   2 A$DrawWebToC.p     0240 GR
  2 A$DrawWebToC.p     0242 GR  |   2 A$DrawWebToC.p     0244 GR
  2 A$DrawWebToC.p     0246 GR  |   2 A$DrawWebToC.p     0248 GR
  2 A$DrawWebToC.p     024B GR  |   2 A$DrawWebToC.p     024D GR
  2 A$DrawWebToC.p     024F GR  |   2 A$DrawWebToC.p     0251 GR
  2 A$DrawWebToC.p     0253 GR  |   2 A$DrawWebToC.p     0255 GR
  2 A$DrawWebToC.p     0257 GR  |   2 A$DrawWebToC.p     0259 GR
  2 A$DrawWebToC.p     025B GR  |   2 A$DrawWebToC.p     025D GR
  2 A$DrawWebToC.p     025F GR  |   2 A$DrawWebToC.p     0261 GR
  2 A$DrawWebToC.p     0263 GR  |   2 A$DrawWebToC.p     0265 GR
  2 A$DrawWebToC.p     0268 GR  |   2 A$DrawWebToC.p     026A GR
  2 A$DrawWebToC.p     026C GR  |   2 A$DrawWebToC.p     026E GR
  2 A$DrawWebToC.p     0270 GR  |   2 A$DrawWebToC.p     0272 GR
  2 A$DrawWebToC.p     0274 GR  |   2 A$DrawWebToC.p     0276 GR
  2 A$DrawWebToC.p     0278 GR  |   2 A$DrawWebToC.p     027A GR
  2 A$DrawWebToC.p     027C GR  |   2 A$DrawWebToC.p     027E GR
  2 A$DrawWebToC.p     0280 GR  |   2 A$DrawWebToC.p     0283 GR
  2 A$DrawWebToC.p     0285 GR  |   2 A$DrawWebToC.p     0287 GR
  2 A$DrawWebToC.p     0289 GR  |   2 A$DrawWebToC.p     028B GR
  2 A$DrawWebToC.p     028D GR  |   2 A$DrawWebToC.p     028F GR
  2 A$DrawWebToC.p     0291 GR  |   2 A$DrawWebToC.p     0293 GR
  2 A$DrawWebToC.p     0295 GR  |   2 A$DrawWebToC.p     0297 GR
  2 A$DrawWebToC.p     0299 GR  |   2 A$DrawWebToC.p     029B GR
  2 A$DrawWebToC.p     029D GR  |   2 A$DrawWebToC.p     02A0 GR
  2 A$DrawWebToC.p     02A2 GR  |   2 A$DrawWebToC.p     02A4 GR
  2 A$DrawWebToC.p     02A6 GR  |   2 A$DrawWebToC.p     02A8 GR
  2 A$DrawWebToC.p     02AA GR  |   2 A$DrawWebToC.p     02AC GR
  2 A$DrawWebToC.p     02AE GR  |   2 A$DrawWebToC.p     02B0 GR
  2 A$DrawWebToC.p     02B2 GR  |   2 A$DrawWebToC.p     02B4 GR
  2 A$DrawWebToC.p     02B6 GR  |   2 A$DrawWebToC.p     02B8 GR
  2 A$DrawWebToC.p     02BA GR  |   2 A$DrawWebToC.p     02BD GR
  2 A$DrawWebToC.p     02BF GR  |   2 A$DrawWebToC.p     02C1 GR
  2 A$DrawWebToC.p     02C3 GR  |   2 A$DrawWebToC.p     02C5 GR
  2 A$DrawWebToC.p     02C7 GR  |   2 A$DrawWebToC.p     02C9 GR
  2 A$DrawWebToC.p     02CB GR  |   2 A$DrawWebToC.p     02CD GR
  2 A$DrawWebToC.p     02CF GR  |   2 A$DrawWebToC.p     02D1 GR
  2 A$DrawWebToC.p     02D3 GR  |   2 A$DrawWebToC.p     02D5 GR
  2 A$DrawWebToC.p     02D7 GR  |   2 A$DrawWebToC.p     02DA GR
  2 A$DrawWebToC.p     02DC GR  |   2 A$DrawWebToC.p     02DE GR
  2 A$DrawWebToC.p     02E0 GR  |   2 A$DrawWebToC.p     02E2 GR
  2 A$DrawWebToC.p     02E4 GR  |   2 A$DrawWebToC.p     02E6 GR
  2 A$DrawWebToC.p     02E8 GR  |   2 A$DrawWebToC.p     02EA GR
  2 A$DrawWebToC.p     02EC GR  |   2 A$DrawWebToC.p     02EE GR
  2 A$DrawWebToC.p     02F0 GR  |   2 A$DrawWebToC.p     02F2 GR
  2 A$DrawWebToC.p     02F5 GR  |   2 A$DrawWebToC.p     02F7 GR
  2 A$DrawWebToC.p     02F9 GR  |   2 A$DrawWebToC.p     02FB GR
  2 A$DrawWebToC.p     02FD GR  |   2 A$DrawWebToC.p     02FF GR
  2 A$DrawWebToC.p     0301 GR  |   2 A$DrawWebToC.p     0303 GR
  2 A$DrawWebToC.p     0305 GR  |   2 A$DrawWebToC.p     0307 GR
  2 A$DrawWebToC.p     0309 GR  |   2 A$DrawWebToC.p     030B GR
  2 A$DrawWebToC.p     030D GR  |   2 A$DrawWebToC.p     030F GR
  2 A$DrawWebToC.p     0312 GR  |   2 A$DrawWebToC.p     0314 GR
  2 A$DrawWebToC.p     0316 GR  |   2 A$DrawWebToC.p     0318 GR
  2 A$DrawWebToC.p     031A GR  |   2 A$DrawWebToC.p     031C GR
  2 A$DrawWebToC.p     031E GR  |   2 A$DrawWebToC.p     0320 GR
  2 A$DrawWebToC.p     0322 GR  |   2 A$DrawWebToC.p     0324 GR
  2 A$DrawWebToC.p     0326 GR  |   2 A$DrawWebToC.p     0328 GR
  2 A$DrawWebToC.p     032A GR  |   2 A$DrawWebToC.p     032C GR
  2 A$DrawWebToC.p     032E GR  |   2 A$DrawWebToC.p     0330 GR
  2 A$DrawWebToC.p     0332 GR  |   2 A$DrawWebToC.p     0334 GR
  2 A$DrawWebToC.p     0336 GR  |   2 A$DrawWebToC.p     0338 GR
  2 A$DrawWebToC.p     033A GR  |   2 A$DrawWebToC.p     033C GR
  2 A$DrawWebToC.p     033E GR  |   2 A$DrawWebToC.p     0340 GR
  2 A$DrawWebToC.p     0343 GR  |   2 A$DrawWebToC.p     0345 GR
  2 A$DrawWebToC.p     0347 GR  |   2 A$DrawWebToC.p     0349 GR
  2 A$DrawWebToC.p     034B GR  |   2 A$DrawWebToC.p     034D GR
  2 A$DrawWebToC.p     034F GR  |   2 A$DrawWebToC.p     0351 GR
  2 A$DrawWebToC.p     0353 GR  |   2 A$DrawWebToC.p     0355 GR
  2 A$DrawWebToC.p     0357 GR  |   2 A$DrawWebToC.p     0359 GR
  2 A$DrawWebToC.p     035C GR  |   2 A$DrawWebToC.p     035E GR
  2 A$DrawWebToC.p     0360 GR  |   2 A$DrawWebToC.p     0362 GR
  2 A$DrawWebToC.p     0364 GR  |   2 A$DrawWebToC.p     0366 GR
  2 A$DrawWebToC.p     0368 GR  |   2 A$DrawWebToC.p     036A GR
  2 A$DrawWebToC.p     036C GR  |   2 A$DrawWebToC.p     036E GR
  2 A$DrawWebToC.p     0370 GR  |   2 A$DrawWebToC.p     0372 GR
  2 A$DrawWebToC.p     0374 GR  |   2 A$DrawWebToC.p     0377 GR
  2 A$DrawWebToC.p     0379 GR  |   2 A$DrawWebToC.p     037B GR
  2 A$DrawWebToC.p     037D GR  |   2 A$DrawWebToC.p     037F GR
  2 A$DrawWebToC.p     0381 GR  |   2 A$DrawWebToC.p     0383 GR
  2 A$DrawWebToC.p     0385 GR  |   2 A$DrawWebToC.p     0387 GR
  2 A$DrawWebToC.p     0389 GR  |   2 A$DrawWebToC.p     038B GR
  2 A$DrawWebToC.p     038D GR  |   2 A$DrawWebToC.p     038F GR
  2 A$DrawWebToC.p     0391 GR  |   2 A$DrawWebToC.p     0394 GR
  2 A$DrawWebToC.p     0396 GR  |   2 A$DrawWebToC.p     0398 GR
  2 A$DrawWebToC.p     039A GR  |   2 A$DrawWebToC.p     039C GR
  2 A$DrawWebToC.p     039E GR  |   2 A$DrawWebToC.p     03A0 GR
  2 A$DrawWebToC.p     03A2 GR  |   2 A$DrawWebToC.p     03A4 GR
  2 A$DrawWebToC.p     03A6 GR  |   2 A$DrawWebToC.p     03A8 GR
  2 A$DrawWebToC.p     03AA GR  |   2 A$DrawWebToC.p     03AC GR
  2 A$DrawWebToC.p     03AE GR  |   2 A$DrawWebToC.p     03B1 GR
  2 A$DrawWebToC.p     03B3 GR  |   2 A$DrawWebToC.p     03B5 GR
  2 A$DrawWebToC.p     03B7 GR  |   2 A$DrawWebToC.p     03B9 GR
  2 A$DrawWebToC.p     03BB GR  |   2 A$DrawWebToC.p     03BD GR
  2 A$DrawWebToC.p     03BF GR  |   2 A$DrawWebToC.p     03C1 GR
  2 A$DrawWebToC.p     03C3 GR  |   2 A$DrawWebToC.p     03C5 GR
  2 A$DrawWebToC.p     03C7 GR  |   2 A$DrawWebToC.p     03C9 GR
  2 A$DrawWebToC.p     03CB GR  |   2 A$DrawWebToC.p     03CE GR
  2 A$DrawWebToC.p     03D0 GR  |   2 A$DrawWebToC.p     03D2 GR
  2 A$DrawWebToC.p     03D4 GR  |   2 A$DrawWebToC.p     03D6 GR
  2 A$DrawWebToC.p     03D8 GR  |   2 A$DrawWebToC.p     03DA GR
  2 A$DrawWebToC.p     03DC GR  |   2 A$DrawWebToC.p     03DE GR
    Abs_a_b        =   F584     |     Abs_b          =   F58B 
    Add_Score_a    =   F85E     |     Add_Score_d    =   F87C 
    Bitmask_a      =   F57E     |     Char_Table     =   F9F4 
    Char_Table_End =   FBD4     |     Check0Ref      =   F34F 
    Clear_C8_RAM   =   F542     |     Clear_Score    =   F84F 
    Clear_Sound    =   F272     |     Clear_x_256    =   F545 
    Clear_x_b      =   F53F     |     Clear_x_b_80   =   F550 
    Clear_x_b_a    =   F552     |     Clear_x_d      =   F548 
    Cold_Start     =   F000     |     Compare_Score  =   F8C7 
    DP_to_C8       =   F1AF     |     DP_to_D0       =   F1AA 
    Dec_3_Counters =   F55A     |     Dec_6_Counters =   F55E 
    Dec_Counters   =   F563     |     Delay_0        =   F579 
    Delay_1        =   F575     |     Delay_2        =   F571 
    Delay_3        =   F56D     |     Delay_RTS      =   F57D 
    Delay_b        =   F57A     |     Do_Sound       =   F289 
    Do_Sound_x     =   F28C     |     Dot_List       =   F2D5 
    Dot_List_Reset =   F2DE     |     Dot_d          =   F2C3 
    Dot_here       =   F2C5     |     Dot_ix         =   F2C1 
    Dot_ix_b       =   F2BE     |     Draw_Grid_VL   =   FF9F 
    Draw_Line_d    =   F3DF     |     Draw_Pat_VL    =   F437 
    Draw_Pat_VL_a  =   F434     |     Draw_Pat_VL_d  =   F439 
    Draw_VL        =   F3DD     |     Draw_VL_a      =   F3DA 
    Draw_VL_ab     =   F3D8     |     Draw_VL_b      =   F3D2 
    Draw_VL_mode   =   F46E     |     Draw_VLc       =   F3CE 
    Draw_VLcs      =   F3D6     |     Draw_VLp       =   F410 
    Draw_VLp_7F    =   F408     |     Draw_VLp_FF    =   F404 
    Draw_VLp_b     =   F40E     |     Draw_VLp_scale =   F40C 
    Explosion_Snd  =   F92E     |     Get_Rise_Idx   =   F5D9 
    Get_Rise_Run   =   F5EF     |     Get_Run_Idx    =   F5DB 
    INCLUDE_I      =   0001     |     Init_Music     =   F68D 
    Init_Music_Buf =   F533     |     Init_Music_chk =   F687 
    Init_Music_x   =   F692     |     Init_OS        =   F18B 
    Init_OS_RAM    =   F164     |     Init_VIA       =   F14C 
    Intensity_1F   =   F29D     |     Intensity_3F   =   F2A1 
    Intensity_5F   =   F2A5     |     Intensity_7F   =   F2A9 
    Intensity_a    =   F2AB     |     Joy_Analog     =   F1F5 
    Joy_Digital    =   F1F8     |   2 LF33D10            0078 GR
  2 LF33D104           0505 GR  |   2 LF33D111           054B GR
  2 LF33D118           0591 GR  |   2 LF33D12            0093 GR
  2 LF33D125           05D7 GR  |   2 LF33D132           061D GR
  2 LF33D139           0663 GR  |   2 LF33D14            00B0 GR
  2 LF33D16            00CD GR  |   2 LF33D18            00EA GR
  2 LF33D20            0105 GR  |   2 LF33D25            0133 GR
  2 LF33D27            014C GR  |   2 LF33D29            0169 GR
  2 LF33D31            0184 GR  |   2 LF33D33            01A1 GR
  2 LF33D35            01BE GR  |   2 LF33D37            01DB GR
  2 LF33D39            01F6 GR  |   2 LF33D4             0025 GR
  2 LF33D41            0213 GR  |   2 LF33D46            0244 GR
  2 LF33D48            025D GR  |   2 LF33D50            0278 GR
  2 LF33D52            0295 GR  |   2 LF33D54            02B2 GR
  2 LF33D56            02CF GR  |   2 LF33D58            02EA GR
  2 LF33D6             003E GR  |   2 LF33D60            0307 GR
  2 LF33D62            0324 GR  |   2 LF33D67            0355 GR
  2 LF33D69            036C GR  |   2 LF33D71            0389 GR
  2 LF33D73            03A6 GR  |   2 LF33D75            03C3 GR
  2 LF33D77            03DE GR  |   2 LF33D79            03FB GR
  2 LF33D8             005B GR  |   2 LF33D81            0418 GR
  2 LF33D83            0435 GR  |   2 LF33D90            047A GR
  2 LF33D97            04C0 GR  |     Mov_Draw_VL    =   F3BC 
    Mov_Draw_VL_a  =   F3B9     |     Mov_Draw_VL_ab =   F3B7 
    Mov_Draw_VL_b  =   F3B1     |     Mov_Draw_VL_d  =   F3BE 
    Mov_Draw_VLc_a =   F3AD     |     Mov_Draw_VLcs  =   F3B5 
    Move_Mem_a     =   F683     |     Move_Mem_a_1   =   F67F 
    Moveto_d       =   F312     |     Moveto_d_7F    =   F2FC 
    Moveto_ix      =   F310     |     Moveto_ix_7F   =   F30C 
    Moveto_ix_FF   =   F308     |     Moveto_ix_b    =   F30E 
    Moveto_x_7F    =   F2F2     |     New_High_Score =   F8D8 
    Obj_Hit        =   F8FF     |     Obj_Will_Hit   =   F8F3 
    Obj_Will_Hit_u =   F8E5     |     Print_List     =   F38A 
    Print_List_chk =   F38C     |     Print_List_hw  =   F385 
    Print_Ships    =   F393     |     Print_Ships_x  =   F391 
    Print_Str      =   F495     |     Print_Str_d    =   F37A 
    Print_Str_hwyx =   F373     |     Print_Str_yx   =   F378 
    Random         =   F517     |     Random_3       =   F511 
    Read_Btns      =   F1BA     |     Read_Btns_Mask =   F1B4 
    Recalibrate    =   F2E6     |     Reset0Int      =   F36B 
    Reset0Ref      =   F354     |     Reset0Ref_D0   =   F34A 
    Reset_Pen      =   F35B     |     Rise_Run_Angle =   F593 
    Rise_Run_Len   =   F603     |     Rise_Run_X     =   F5FF 
    Rise_Run_Y     =   F601     |     Rot_VL         =   F616 
    Rot_VL_M_dft   =   F62B     |     Rot_VL_Mode    =   F61F 
    Rot_VL_ab      =   F610     |     SHIFT_1        =   00E0 
    SHIFT_2        =   00FE     |     Select_Game    =   F7A9 
    Set_Refresh    =   F1A2     |     Sound_Byte     =   F256 
    Sound_Byte_raw =   F25B     |     Sound_Byte_x   =   F259 
    Sound_Bytes    =   F27D     |     Sound_Bytes_x  =   F284 
    Strip_Zeros    =   F8B7     |     VIA_DDR_a      =   D003 
    VIA_DDR_b      =   D002     |     VIA_aux_cntl   =   D00B 
    VIA_cntl       =   D00C     |     VIA_int_enable =   D00E 
    VIA_int_flags  =   D00D     |     VIA_port_a     =   D001 
    VIA_port_a_noh =   D00F     |     VIA_port_b     =   D000 
    VIA_shift_reg  =   D00A     |     VIA_t1_cnt_hi  =   D005 
    VIA_t1_cnt_lo  =   D004     |     VIA_t1_lch_hi  =   D007 
    VIA_t1_lch_lo  =   D006     |     VIA_t2_hi      =   D009 
    VIA_t2_lo      =   D008     |     Vec_0Ref_Enabl =   C824 
    Vec_ADSR_Table =   C84F     |     Vec_ADSR_Timer =   C85E 
    Vec_Angle      =   C836     |     Vec_Brightness =   C827 
    Vec_Btn_State  =   C80F     |     Vec_Button_1_1 =   C812 
    Vec_Button_1_2 =   C813     |     Vec_Button_1_3 =   C814 
    Vec_Button_1_4 =   C815     |     Vec_Button_2_1 =   C816 
    Vec_Button_2_2 =   C817     |     Vec_Button_2_3 =   C818 
    Vec_Button_2_4 =   C819     |     Vec_Buttons    =   C811 
    Vec_Cold_Flag  =   CBFE     |     Vec_Counter_1  =   C82E 
    Vec_Counter_2  =   C82F     |     Vec_Counter_3  =   C830 
    Vec_Counter_4  =   C831     |     Vec_Counter_5  =   C832 
    Vec_Counter_6  =   C833     |     Vec_Counters   =   C82E 
    Vec_Default_St =   CBEA     |     Vec_Dot_Dwell  =   C828 
    Vec_Duration   =   C857     |     Vec_Expl_1     =   C858 
    Vec_Expl_2     =   C859     |     Vec_Expl_3     =   C85A 
    Vec_Expl_4     =   C85B     |     Vec_Expl_Chan  =   C85C 
    Vec_Expl_ChanA =   C853     |     Vec_Expl_ChanB =   C85D 
    Vec_Expl_Chans =   C854     |     Vec_Expl_Flag  =   C867 
    Vec_Expl_Timer =   C877     |     Vec_FIRQ_Vecto =   CBF5 
    Vec_Freq_Table =   C84D     |     Vec_High_Score =   CBEB 
    Vec_IRQ_Vector =   CBF8     |     Vec_Joy_1_X    =   C81B 
    Vec_Joy_1_Y    =   C81C     |     Vec_Joy_2_X    =   C81D 
    Vec_Joy_2_Y    =   C81E     |     Vec_Joy_Mux    =   C81F 
    Vec_Joy_Mux_1_ =   C81F     |     Vec_Joy_Mux_1_ =   C820 
    Vec_Joy_Mux_2_ =   C821     |     Vec_Joy_Mux_2_ =   C822 
    Vec_Joy_Resltn =   C81A     |     Vec_Loop_Count =   C825 
    Vec_Max_Games  =   C850     |     Vec_Max_Player =   C84F 
    Vec_Misc_Count =   C823     |     Vec_Music_Chan =   C855 
    Vec_Music_Flag =   C856     |     Vec_Music_Freq =   C861 
    Vec_Music_Ptr  =   C853     |     Vec_Music_Twan =   C858 
    Vec_Music_Wk_1 =   C84B     |     Vec_Music_Wk_5 =   C847 
    Vec_Music_Wk_6 =   C846     |     Vec_Music_Wk_7 =   C845 
    Vec_Music_Wk_A =   C842     |     Vec_Music_Work =   C83F 
    Vec_NMI_Vector =   CBFB     |     Vec_Num_Game   =   C87A 
    Vec_Num_Player =   C879     |     Vec_Pattern    =   C829 
    Vec_Prev_Btns  =   C810     |     Vec_Random_See =   C87D 
    Vec_Rfrsh      =   C83D     |     Vec_Rfrsh_hi   =   C83E 
    Vec_Rfrsh_lo   =   C83D     |     Vec_RiseRun_Le =   C83B 
    Vec_RiseRun_Tm =   C834     |     Vec_Rise_Index =   C839 
    Vec_Run_Index  =   C837     |     Vec_SWI2_Vecto =   CBF2 
    Vec_SWI3_Vecto =   CBF2     |     Vec_SWI_Vector =   CBFB 
    Vec_Seed_Ptr   =   C87B     |     Vec_Snd_Shadow =   C800 
    Vec_Str_Ptr    =   C82C     |     Vec_Text_HW    =   C82A 
    Vec_Text_Heigh =   C82A     |     Vec_Text_Width =   C82B 
    Vec_Twang_Tabl =   C851     |     Wait_Recal     =   F192 
    Warm_Start     =   F06C     |     Xform_Rise     =   F663 
    Xform_Rise_a   =   F661     |     Xform_Run      =   F65D 
    Xform_Run_a    =   F65B     |   2 drawWebAsm         0000 GR
    music1         =   FD0D     |     music2         =   FD1D 
    music3         =   FD81     |     music4         =   FDD3 
    music5         =   FE38     |     music6         =   FE76 
    music7         =   FEC6     |     music8         =   FEF8 
    music9         =   FF26     |     musica         =   FF44 
    musicb         =   FF62     |     musicc         =   FF7A 
    musicd         =   FF8F 

ASxxxx Assembler V05.00  (Motorola 6809), page 2.
Hexidecimal [16-Bits]

Area Table

[_CSEG]
   0 _CODE            size    0   flags C080
   2 .text            size  67B   flags  100
[_DSEG]
   1 _DATA            size    0   flags C0C0

